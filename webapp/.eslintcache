[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx":"16","D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx":"17","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserService.jsx":"18","D:\\Temps\\safarizote\\webapp\\src\\pages\\Modal.jsx":"19","D:\\Temps\\safarizote\\webapp\\src\\pages\\ThemeContext.jsx":"20","D:\\Temps\\safarizote\\webapp\\src\\pages\\Button.jsx":"21"},{"size":708,"mtime":1633549335586,"results":"22","hashOfConfig":"23"},{"size":4679,"mtime":1633559126112,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1618608163149,"results":"25","hashOfConfig":"23"},{"size":1777,"mtime":1630223760563,"results":"26","hashOfConfig":"23"},{"size":3580,"mtime":1630223760562,"results":"27","hashOfConfig":"23"},{"size":7454,"mtime":1633469900611,"results":"28","hashOfConfig":"23"},{"size":716,"mtime":1633532357257,"results":"29","hashOfConfig":"23"},{"size":1083,"mtime":1617228008999,"results":"30","hashOfConfig":"31"},{"size":889,"mtime":1630223760562,"results":"32","hashOfConfig":"23"},{"size":4317,"mtime":1631982032670,"results":"33","hashOfConfig":"23"},{"size":1894,"mtime":1633456090968,"results":"34","hashOfConfig":"23"},{"size":2371,"mtime":1611692147285,"results":"35","hashOfConfig":"31"},{"size":7150,"mtime":1630223760562,"results":"36","hashOfConfig":"23"},{"size":4675,"mtime":1633455689104,"results":"37","hashOfConfig":"23"},{"size":554,"mtime":1632040220609,"results":"38","hashOfConfig":"23"},{"size":3090,"mtime":1633217602718,"results":"39","hashOfConfig":"23"},{"size":2544,"mtime":1631202877853,"results":"40","hashOfConfig":"23"},{"size":1252,"mtime":1633455399899,"results":"41","hashOfConfig":"23"},{"size":532,"mtime":1633469095689,"results":"42","hashOfConfig":"23"},{"size":603,"mtime":1633532390854,"results":"43","hashOfConfig":"23"},{"size":597,"mtime":1633557408233,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uxk0ch",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1j2qoq7",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],"D:\\Temps\\safarizote\\webapp\\src\\App.js",["96","97","98"],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["99","100","101","102","103","104","105","106","107","108","109"],"import React, { useState, useRef } from 'react';\r\nimport parse from \"html-react-parser\";\r\nimport moment from 'moment';\r\nimport Bowser from \"bowser\";\r\nimport 'font-awesome/less/font-awesome.less';\r\n\r\nimport Big_Buck_Bunny from \"../media/Big_Buck_Bunny.mp4\";\r\nimport kenya_safari from \"../media/kenya-safari.mp4\";\r\nimport kilimanjaro from \"../media/kilimanjaro.mp4\";\r\nimport MOV_FILE from \"../media/MOV_FILE.mov\";\r\nimport preview from \"../media/preview.mp4\";\r\nimport the_globe from \"../media/the_globe.mov\";\r\n\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nimport Modal from \"./Modal\";\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [numberOfHits, setNumberOfHits] = useState([]);\r\n    const [pageSize, setPageSize] = useState(2);\r\n    const [userPos, setUserPos] = useState({lat: null, long: null});\r\n    const [position, setPosition] = useState({});\r\n\r\n\r\n    const videoUrl = 'https://www.youtube.com/watch?v=3qW5z4xeiac';\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      document.title = \"Mombasa Safari Tours to Kenya's Major National Parks. Masai Mara, Tsavo East, Ngutuni, Tsavo West, Amboseli also to other najor destinations in Kenya\";\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n      const api_key = '94a2ea2cd89d43ea94b26702f95a9bb4';\r\n\r\n      axios.get('https://ipinfo.io/json').then(response => {\r\n           axios.get(`https://ipgeolocation.abstractapi.com/v1/?api_key=${api_key}&ip_address=${response.data.ip}`)\r\n            .then(resp => {\r\n              const data = resp.data;\r\n              const userBrowser = Bowser.parse(window.navigator.userAgent);\r\n              const metrics = {\r\n                url: response.data.hostname,\r\n                browser: userBrowser.browser.name,\r\n                browserVersion: userBrowser.browser.version,\r\n                browserOsName: userBrowser.os.name,\r\n                browserOsVersion: userBrowser.os.version,\r\n                city: data.city,\r\n                organization:  resp.data.connection.autonomous_system_organization,\r\n                connectionType: resp.data.connection.connection_type,\r\n                continent: resp.data.continent,\r\n                continentCode: resp.data.continent_code,\r\n                country: resp.data.country,\r\n                countryCode: resp.data.country_code,\r\n                currencyName: resp.data.currency.currency_name,\r\n                currencyCode: resp.data.currency.currency_code,\r\n                emoji: resp.data.flag.emoji,\r\n                flagPng: resp.data.flag.png,\r\n                flagSvg: resp.data.flag.svg,\r\n                ipAddress: resp.data.ip_address,\r\n                latitude: resp.data.latitude,\r\n                longitude: resp.data.longitude,\r\n                postalCode: resp.data.postal_code,\r\n                region: resp.data.region,\r\n                regionIsoCode: resp.data.region_iso_code,\r\n                timezoneName: resp.data.timezone.name,\r\n                timezoneAbbreviation: resp.data.timezone.abbreviation,\r\n                presentTime: resp.data.timezone.current_time,\r\n                dateCreated: moment.now()\r\n              }\r\n\r\n              axios.post('/api/saveVisit', metrics).then(response => {\r\n                setNumberOfHits(response.data);\r\n              });\r\n\r\n            });\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          console.log(response);\r\n          setSafaris(response.data);\r\n          /* Map each item of nodes to a nested array where each is a row of two columns */\r\n          const safarisArray = safaris.map((safari) => [safari.url, safari.browser]);\r\n          var result = [];\r\n          safarisArray.reduce(function(res, value) {\r\n            if (!res[value.url]) {\r\n              res[value.url] = { Url: value.url, Url: value.browser, qty: 0 };\r\n              result.push(res[value.url])\r\n            }\r\n            res[value.url].qty += 1;\r\n            return res;\r\n          }, {});\r\n\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          title: '<span className=\\'SafariTitle\\'>'+ safari.title  + '<span>',\r\n          summary: '<span className=\\'Summary\\'>' + safari.summary + '<span>',\r\n          details: safari.details + ' <strong>USD ' + safari.price + '<strong>',\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li className=\"CssLink\"\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n\r\n  const SafariTours = props => {\r\n    console.log(props);\r\n    const Accordion = ({children, title, summary, video, idx}) => {\r\n      const [show, setShow] = useState(false);\r\n\r\n      const mod = idx % 2;\r\n      return (\r\n        <div className=\"SafariTours\">\r\n          <div className=\"VideoPlayer\">\r\n            <VideoPlayer video={video} className=\"video-player\"/> \r\n          </div>\r\n          <div dangerouslySetInnerHTML={{__html: summary}} />  \r\n          <span className='sub' onClick={() => setShow(true)}>Show Details</span>\r\n          <Modal show={show} setShow={setShow} title={parse(title)}>\r\n              {children} \r\n          </Modal>\r\n          <div className='clearfix'></div>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    const videos = props.videos;\r\n    return (\r\n      <div>\r\n        {props && props.data.map((card, idx) =>{ return (\r\n          <Accordion title={card.title} summary={card.summary} video={videos[idx]} idx={idx}>\r\n            {card.details} \r\n          </Accordion>\r\n        ); })}\r\n      </div>\r\n    );\r\n  } \r\n\r\n  const VideoPlayer = (props) => {\r\n    const videoRef = useRef(null);\r\n   \r\n    function playVideo() {\r\n      videoRef.current.play();\r\n    }\r\n  \r\n    function pauseVideo() {\r\n      videoRef.current.pause();\r\n    }\r\n    \r\n    return (\r\n        <video ref={videoRef} controls autoPlay loop muted className=\"video-player\">\r\n          {/* Of course it's the big buck bunny! */}\r\n          <source src={props.video} type=\"video/mp4\"/>\r\n        </video>\r\n    );\r\n  }; \r\n\r\n  const videos = [ Big_Buck_Bunny, kenya_safari, kilimanjaro, MOV_FILE, preview, the_globe ];\r\n  return (\r\n    <Card className=\"InnerCard\" fontColor=\"black\">\r\n        <div id=\"modal-root\"></div>\r\n        <ul id=\"page-numbers\">\r\n         <li style={{paddingLeft:'1em',fontStyle: 'oblique'}}><span>Hits: { numberOfHits.length } </span></li> \r\n         <li style={{paddingLeft:'1em',fontStyle: 'oblique'}}><span>Our Safaris: </span></li> \r\n         {renderPageNumbers}\r\n        </ul>        \r\n        {currentItems && currentItems.length > 0 \r\n           ? <SafariTours data={currentItems} videos={videos}/> \r\n           : <p>No Data Found!!</p>}                   \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],["110","111"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["112","113"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = (props) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Use this form or send us email at mkunsim@gmail.com. Your name and email address will not be published, sold, or shared. We will not spam you\";\r\n      }, []);\r\n      \r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            title: props.title===null ? 'Dan Johnson' : props.title, \r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\" >\r\n            <p>Contact Us!!</p>\r\n            <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div> \r\n                <div className=\"col-75\"> \r\n                    <input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">      \r\n                        <label htmlFor=\"message\">Message</label>\r\n                    </div> \r\n                    <div className=\"col-75\">  \r\n                        <textarea id=\"message\" name=\"message\"\r\n                            className=\"expand\" \r\n                            rows=\"10\"\r\n                            placeholder=\"Write something..\" \r\n                            className=\"form-control\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-100\">    \r\n                        <input type=\"submit\" value=\"Send Message\" className=\"lg-button btn-primary\"/>\r\n                    </div>  \r\n                </div>  \r\n            </form>\r\n            </div>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",["114","115"],"import React from 'react';\r\nimport {Redirect } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport UserService from './UserService';\r\n\r\nconst SignIn = (props) => {\r\n    const [loggedIn, setLoggedIn] = React.useState(0);\r\n    const [form, setForm] = React.useState({\r\n        email: '',\r\n        password: ''\r\n      });\r\n\r\n    const { from } = props.location.state || { from: { pathname: '/' } }\r\n\r\n    const handleChange = (event) => {\r\n      const {name, value} = event.target;\r\n      console.log('name: ' + name + ' value: ' + value);\r\n      setForm({...form, [name]: value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n          username: form.email,\r\n          password: form.password\r\n        };\r\n\r\n        UserService.loginUser(user).then(response => {\r\n          console.log(response);\r\n          localStorage.setItem('jwt_token', 'true');         \r\n          setLoggedIn((prevState) => prevState + 1);\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n        \r\n    };\r\n      \r\n    if (UserService.isLoggedIn() != 'PleaseLogIn') {\r\n      console.log('Login Date ' + new Date());\r\n      console.log('SignIn.isLoggedIn:= ' + UserService.isLoggedIn());\r\n      return <Redirect to={from} />\r\n    } \r\n    \r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n            Please Login Here!!\r\n            <form class=\"form-inline\" onSubmit={handleSubmit}>\r\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter email\"\r\n                    onChange={handleChange} required />\r\n                <input type=\"password\" id=\"password\" name=\"password\" autocomplete=\"current-password\"\r\n                    onChange={handleChange} required />\r\n                <input type=\"submit\" name=\"Submit\" />\r\n            </form>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SignIn;","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["116","117","118"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      city: 'Kabul',\r\n      iso2: \"AF\",\r\n      name: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, city: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [cities, setCities] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      document.title = \"Get the World weather forecast. Access hourly, 1 day and 5 day forecasts along with up to the minute reports and videos from safarizote.herokuapp.com\";\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n            console.log(response);\r\n            setCountries(response.data);\r\n        }).catch(err => console.log(err));\r\n\r\n         let country = {\r\n              name: 'Kabul',\r\n              iso2: \"AF\",\r\n              cities: null\r\n        };\r\n \r\n      axios.post('/api/cities', country)\r\n        .then(response => {\r\n            console.log(response);\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      var headers = {\r\n        'Content-Type': 'application/json' \r\n      };\r\n\r\n      const country = {\r\n            name: state.city,\r\n            iso2: state.iso2,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/weather', country, headers)\r\n        .then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => { console.log(err)});\r\n\r\n      axios.post('/api/forecast', country, headers)\r\n        .then(response => {\r\n          setList(response.data.list);\r\n          setForecast(response.data);\r\n       }).catch(err => {console.log(err)});\r\n\r\n    }, [countries]);\r\n\r\n    React.useEffect(() => { \r\n\r\n      let country = {\r\n        name: state.name,\r\n        iso2: state.iso2,\r\n        cities: null\r\n      };\r\n\r\n      axios.post('/api/cities', country)\r\n        .then(response => {  \r\n            console.log(response);\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, [state.iso2]);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.iso2 === event.target.value);\r\n            });          \r\n            let newCountry = { ...state, \r\n                iso2: filteredCountry.iso2, \r\n                name: filteredCountry.name\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.name,\r\n            iso2: state.iso2,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form class=\"form-inline\"  onSubmit={handleSubmit}>\r\n          <select id=\"countryCode\" name=\"countryCode\" onChange={handleChange}>    \r\n              <option value=\"none\">Select Country</option>   \r\n              {countries.map((country) => (\r\n                  <option value={country.iso2}>{country.name}</option>\r\n              ))}    \r\n          </select>\r\n          <select id=\"cityName\" name=\"cityName\" onChange={handleChange}>    \r\n              <option value=\"none\">Select City</option>    \r\n              {state.cities && state.cities.map((city) => (\r\n                  <option value={city.name}>{city.name}</option>\r\n              ))}\r\n            </select>  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        {weather != null && weather.main\r\n          ? <WeatherCard \r\n            title='Current Local Weather'\r\n            date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n            weather={weather}\r\n            />     \r\n          : <div>No Weather</div>   \r\n        }\r\n\r\n        <h3>Weather Forecast</h3>\r\n        {forecast != null \r\n          ? <ForecastList cards={list} />\r\n          : <div>No Forecast</div>   \r\n        }\r\n\r\n        </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    const unix_tm = props.weather.dt;\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n         <div  className=\"Current\">\r\n          Cod: {props.weather.cod} Date: {new Date(unix_tm*1000).toLocaleDateString()}\r\n            <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} \r\n                  alt=\"wthr img\" \r\n                  className=\"wthrImg\"/>\r\n          </div>      \r\n          <div className=\"Current\">\r\n              <div className=\"CellDiv\"><small>Temp</small> {props.weather.main.temp}°</div>\r\n              <div className=\"CellDiv\">{props.weather.weather[0].description}</div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>          \r\n        <div>High</div>\r\n        <div>{props.temp.day}°</div>\r\n        <div>Now</div>\r\n        <div>{props.temp.min}°</div>\r\n        <div>{props.weather[0].description}</div>         \r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",["119"],"import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport UserService from './UserService';\r\n\r\nconst Private = ({component: Component, ...rest}) => {\r\n  console.log('Private UserService.isLoggedIn? ' + UserService.isLoggedIn());\r\n  return (\r\n    <Route {...rest} render={props => (            \r\n      UserService.isLoggedIn() == 'true'\r\n        ? <Component {...props} />            \r\n        : <Redirect  to={{pathname: '/signIn', state: {from: props.location}}} />        \r\n    )} />   \r\n  );\r\n}\r\n\r\nexport default Private;","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx",["120","121","122"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Card from './Card';\r\nimport ReactPaginate from 'react-paginate';\r\n \r\nfunction BackUp() {\r\n const [value, setValue] = useState(''); \r\n const [options, setOptions] = React.useState([]); \r\n const [postsPerPage] = useState(6);\r\n const [offset, setOffset] = useState(1);\r\n const [posts, setAllPosts] = useState([]);\r\n const [pageCount, setPageCount] = useState(0);\r\n const [isLoading, setIsLoading] = useState(false);\r\n\r\n React.useEffect(async () => {\r\n    if (!posts.length) {\r\n      const res = await axios.get(`/api/listAll`)\r\n      const data = res.data;\r\n      const result = data.map(a => a.name);\r\n      setOptions(result);\r\n    }\r\n}, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n    const getPostData = (data) => {\r\n      return (\r\n        data.map(post => <div className=\"thumbnail\" key={post.name}>\r\n          <img src={post.path} className=\"CssImage\" alt='S.M.S'/>\r\n          <p className=\"desc\">{post.name}</p>\r\n        </div>)\r\n      )\r\n    };\r\n  \r\n    const getAllPosts = async () => {\r\n      const res = await axios.get(`/api/categories`)\r\n      const data = res.data;\r\n      const slice = data.slice(offset - 1 , offset - 1 + postsPerPage)\r\n  \r\n      const postData = getPostData(slice)\r\n  \r\n      setAllPosts(postData);\r\n      setPageCount(Math.ceil(data.length / postsPerPage));\r\n      setIsLoading(false);\r\n    }\r\n\r\n    setIsLoading(true);\r\n    getAllPosts();\r\n  }, [offset]);\r\n\r\n const handlePageClick = (event) => {\r\n   const selectedPage = event.selected;\r\n   setOffset(selectedPage + 1)\r\n };\r\n\r\n const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      alert(`Submitting Name ${value}`)\r\n  }\r\n\r\n return (\r\n  <Card className=\"InnerCard\" fontColor=\"black\" >\r\n      <div style={{border:'2px solid brown'}}>\r\n        <strong>Select folder</strong>\r\n        <form onSubmit={handleSubmit}>\r\n          <select onChange={onChange}>\r\n            <option value={'DefaultValue'}>{'..Select..'}</option>\r\n            {options && options.map((folder, idx) => (\r\n              <option key={idx} value={folder}>{folder}</option>\r\n            ))}\r\n          </select>\r\n          Selected folder: {value}\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        {isLoading ? (\r\n            <div className={isLoading ? \"loader\" : undefined}> \r\n                <div className=\"spinner\"/> \r\n            </div>\r\n          ) : (\r\n            <span>Is Loaded!!</span>\r\n          )}\r\n      </div>\r\n\r\n     <ReactPaginate\r\n       previousLabel={\"prev\"}\r\n       nextLabel={\"next\"}\r\n       breakLabel={\"...\"}\r\n       breakClassName={\"break-me\"}\r\n       pageCount={pageCount}\r\n       onPageChange={handlePageClick}\r\n       containerClassName={\"pagination\"}\r\n       subContainerClassName={\"pages pagination\"}\r\n       activeClassName={\"active\"} />\r\n     {/* Display all the posts */}\r\n     <div className=\"gallery\">\r\n        {posts} \r\n     </div>\r\n     <div class=\"newsbrief\"> </div>\r\n   </Card>\r\n );\r\n}\r\n \r\nexport default BackUp;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx",["123","124","125"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Metrics = () => {\r\n   const [myData, setMyData] = useState([]);\r\n   const [totalCount, setTotalCount] = useState(0);\r\n\r\n    async function findDate(data) {\r\n        const mediaTypes = data.map(dataItem => dataItem.url) \r\n        .filter((mediaType, index, array) => array.indexOf(mediaType) === index); \r\n        \r\n        const aggregatedData = mediaTypes.map(dataItem => ({\r\n            type: dataItem,\r\n            dateCreated: data.filter(item => item.url == dataItem)[0].dateCreated.split('.')[0],\r\n            count: data.filter(item => item.url == dataItem).length\r\n        }));\r\n        \r\n        return aggregatedData;\r\n    }\r\n\r\n    useEffect(() => {\r\n       axios.get('/api/allHits').then(response => {\r\n          const fetchData = (data) => {\r\n            findDate(data).then(resp => {\r\n              setMyData([ ...myData, ...resp ]);\r\n              const totalCount = resp.reduce((total, item) => total = total + item.count, 0);\r\n              setTotalCount(totalCount);\r\n            }).catch(err => {\r\n                console.error(err);\r\n            })\r\n          }\r\n\r\n          fetchData(response.data);\r\n\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n            <h4 style={{ margin: '20px', fontStyle: 'bold', textAlign: 'left'}}>Safari Zote!</h4>\r\n            <p style={{ margin: '20px', textAlign: 'left'}}>People also ask about this</p>\r\n            <ul className=\"vList\">\r\n               <li>How much does a safari cost in Kenya?</li>\r\n               <li>What is the best safari in Kenya?</li>\r\n               <li>What is the best time to go on safari in Kenya?</li>\r\n               <li>Is Kenya safe for Safari?</li>\r\n            </ul>\r\n            <table className=\"Table\">  \r\n              <tr>\r\n                <th>ID</th>\r\n                <th>URL</th>\r\n                <th>Last Visited</th>\r\n                <th>HITS</th>\r\n              </tr>        \r\n               {myData.map((item,idx) => \r\n                 <tr key={idx}>\r\n                   <td>{idx}</td>\r\n                   <td>{item.type}</td>\r\n                   <td>{item.dateCreated}</td>\r\n                   <td>{item.count}</td>\r\n                 </tr>\r\n               )}\r\n            </table>\r\n            <p style={{ margin: '20px', textAlign:'left'}}>Hits: { totalCount }</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Metrics","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserService.jsx",["126"],"import axios from 'axios';\r\n\r\nconst isLoggedIn = () => {\r\n  return localStorage.getItem('jwt_token');\r\n}\r\n\r\nconst loginUser = async (user) => {\r\n  const {username, password} = user;\r\n  console.log('!!Deploy a GitHub branch!! ' + localStorage.getItem('jwt_token'));\r\n\r\n  const userAuth = { \r\n    email: username,\r\n    password: password,\r\n    token: '',\r\n    dateCreated: new Date() \r\n  };\r\n  \r\n  let isSignedUp = await axios.post('/api/login', userAuth).then((response) => {     \r\n      console.log(response);\r\n      console.log(response.data);\r\n\r\n      userAuth.token = response.data.token;\r\n      \r\n      return axios.post('/api/verify', userAuth).then((res) => {\r\n        console.log(res);\r\n          return res;\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });   \r\n\r\n  }).catch(err => {\r\n      console.log('error in catch', err);\r\n  });\r\n  \r\n  console.log('1.authedUser');\r\n  console.log(isSignedUp);\r\n  console.log('2.authedUser')\r\n\r\n  if (username === 'm@gmail.com' && password === '12345') {\r\n    return { token: 'true' };\r\n  } else {\r\n    throw new Error('Wrong username or password');\r\n  }\r\n}\r\n\r\nconst logOut = () => {\r\n  localStorage.setItem('jwt_token', 'PleaseLogIn');\r\n}\r\n\r\nexport default { isLoggedIn, loginUser, logOut };","D:\\Temps\\safarizote\\webapp\\src\\pages\\Modal.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\ThemeContext.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Button.jsx",[],{"ruleId":"127","severity":1,"message":"128","line":63,"column":6,"nodeType":"129","endLine":63,"endColumn":21,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":106,"column":11,"nodeType":"133","endLine":106,"endColumn":67},{"ruleId":"134","severity":1,"message":"135","line":106,"column":11,"nodeType":"133","endLine":106,"endColumn":67},{"ruleId":"136","severity":1,"message":"137","line":22,"column":22,"nodeType":"138","messageId":"139","endLine":22,"endColumn":33},{"ruleId":"136","severity":1,"message":"140","line":23,"column":12,"nodeType":"138","messageId":"139","endLine":23,"endColumn":19},{"ruleId":"136","severity":1,"message":"141","line":23,"column":21,"nodeType":"138","messageId":"139","endLine":23,"endColumn":31},{"ruleId":"136","severity":1,"message":"142","line":24,"column":12,"nodeType":"138","messageId":"139","endLine":24,"endColumn":20},{"ruleId":"136","severity":1,"message":"143","line":24,"column":22,"nodeType":"138","messageId":"139","endLine":24,"endColumn":33},{"ruleId":"136","severity":1,"message":"144","line":27,"column":11,"nodeType":"138","messageId":"139","endLine":27,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":96,"column":50,"nodeType":"147","messageId":"148","endLine":96,"endColumn":53},{"ruleId":"127","severity":1,"message":"149","line":106,"column":8,"nodeType":"129","endLine":106,"endColumn":10,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"151","line":143,"column":13,"nodeType":"138","messageId":"139","endLine":143,"endColumn":16},{"ruleId":"136","severity":1,"message":"152","line":174,"column":14,"nodeType":"138","messageId":"139","endLine":174,"endColumn":23},{"ruleId":"136","severity":1,"message":"153","line":178,"column":14,"nodeType":"138","messageId":"139","endLine":178,"endColumn":24},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"136","severity":1,"message":"158","line":26,"column":12,"nodeType":"138","messageId":"139","endLine":26,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":107,"column":29,"nodeType":"161","messageId":"162","endLine":107,"endColumn":53},{"ruleId":"136","severity":1,"message":"163","line":7,"column":12,"nodeType":"138","messageId":"139","endLine":7,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":39,"column":34,"nodeType":"166","messageId":"148","endLine":39,"endColumn":36},{"ruleId":"136","severity":1,"message":"167","line":34,"column":12,"nodeType":"138","messageId":"139","endLine":34,"endColumn":18},{"ruleId":"127","severity":1,"message":"168","line":88,"column":8,"nodeType":"129","endLine":88,"endColumn":19,"suggestions":"169"},{"ruleId":"127","severity":1,"message":"170","line":106,"column":8,"nodeType":"129","endLine":106,"endColumn":20,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"172","line":9,"column":32,"nodeType":"166","messageId":"148","endLine":9,"endColumn":34},{"ruleId":"127","severity":1,"message":"173","line":15,"column":18,"nodeType":"174","endLine":22,"endColumn":2},{"ruleId":"127","severity":1,"message":"175","line":22,"column":4,"nodeType":"129","endLine":22,"endColumn":6,"suggestions":"176"},{"ruleId":"127","severity":1,"message":"177","line":49,"column":6,"nodeType":"129","endLine":49,"endColumn":14,"suggestions":"178"},{"ruleId":"164","severity":1,"message":"172","line":15,"column":55,"nodeType":"166","messageId":"148","endLine":15,"endColumn":57},{"ruleId":"164","severity":1,"message":"172","line":16,"column":49,"nodeType":"166","messageId":"148","endLine":16,"endColumn":51},{"ruleId":"127","severity":1,"message":"179","line":39,"column":8,"nodeType":"129","endLine":39,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":50,"column":1,"nodeType":"183","endLine":50,"endColumn":50},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.","ArrayExpression",["184"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'userPos' is assigned a value but never used.","'setUserPos' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'videoUrl' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Url'.","ObjectExpression","unexpected","React Hook React.useEffect has a missing dependency: 'safaris'. Either include it or remove the dependency array.",["185"],"'mod' is assigned a value but never used.","'playVideo' is defined but never used.","'pauseVideo' is defined but never used.","no-native-reassign",["186"],"no-negated-in-lhs",["187"],"'replyMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'loggedIn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'cities' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'state.city' and 'state.iso2'. Either include them or remove the dependency array.",["188"],"React Hook React.useEffect has a missing dependency: 'state.name'. Either include it or remove the dependency array.",["189"],"Expected '===' and instead saw '=='.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'posts.length'. Either include it or remove the dependency array.",["190"],"React Hook React.useEffect has a missing dependency: 'postsPerPage'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'myData'. Either include it or remove the dependency array. You can also do a functional update 'setMyData(m => ...)' if you only need 'myData' in the 'setMyData' call.",["192"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [images, selectedImage]",{"range":"207","text":"208"},"Update the dependencies array to be: [safaris]",{"range":"209","text":"210"},"Update the dependencies array to be: [countries, state.city, state.iso2]",{"range":"211","text":"212"},"Update the dependencies array to be: [state.iso2, state.name]",{"range":"213","text":"214"},"Update the dependencies array to be: [posts.length]",{"range":"215","text":"216"},"Update the dependencies array to be: [offset, postsPerPage]",{"range":"217","text":"218"},"Update the dependencies array to be: [myData]",{"range":"219","text":"220"},[1847,1862],"[images, selectedImage]",[4267,4269],"[safaris]",[2621,2632],"[countries, state.city, state.iso2]",[3089,3101],"[state.iso2, state.name]",[712,714],"[posts.length]",[1447,1455],"[offset, postsPerPage]",[1312,1314],"[myData]"]