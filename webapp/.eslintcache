[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"16"},{"size":595,"mtime":1610369505835,"results":"17","hashOfConfig":"18"},{"size":4661,"mtime":1611817197607,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609698107957,"results":"20","hashOfConfig":"18"},{"size":604,"mtime":1610908259981,"results":"21","hashOfConfig":"18"},{"size":662,"mtime":1611274830708,"results":"22","hashOfConfig":"18"},{"size":1085,"mtime":1611274769307,"results":"23","hashOfConfig":"18"},{"size":2008,"mtime":1611689170754,"results":"24","hashOfConfig":"18"},{"size":396,"mtime":1611010996549,"results":"25","hashOfConfig":"18"},{"size":951,"mtime":1610910085021,"results":"26","hashOfConfig":"18"},{"size":874,"mtime":1611274758199,"results":"27","hashOfConfig":"18"},{"size":1741,"mtime":1611689016620,"results":"28","hashOfConfig":"18"},{"size":1820,"mtime":1611830897770,"results":"29","hashOfConfig":"18"},{"size":2371,"mtime":1611692147285,"results":"30","hashOfConfig":"18"},{"size":7634,"mtime":1611688931802,"results":"31","hashOfConfig":"18"},{"size":4862,"mtime":1611849084527,"results":"32","hashOfConfig":"18"},{"size":594,"mtime":1611817070128,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1j2qoq7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],["70","71"],"D:\\Temps\\safarizote\\webapp\\src\\App.js",[],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["72","73"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table';\r\nimport Card from './Card';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(2);\r\n\r\n    const handleChecked = (e) => {\r\n      setChecked(!checked);\r\n      console.log(e);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          id: safari.id,\r\n          title: safari.title,\r\n          description: safari.description,\r\n          price: safari.price\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <Card title=\"Safaris\" text=\"Safari Zote\">\r\n        <div className =\"sTable\">\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n          {currentItems && currentItems.length > 0 \r\n          ? <Table data={currentItems}/> \r\n          : <p>No Data Found!!</p>}\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport UserForm, { InputField, TextArea } from \"./UserForm\";\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  name: \"Simon Mukunga\",\r\n  email: \"mkunsim@gmail.com\",\r\n  message: \"Email- Just Testing!! Great Stuff!!\",\r\n  dateCreated: new Date()\r\n};\r\n\r\nconst Email = () => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/email\")\r\n        .then(response => {\r\n          setUsers(response.data)\r\n        })\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevProps) => ({\r\n      ...prevProps,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n  \r\n  const clearState = () => {\r\n    setFormData({ ...initialState });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    axios.post(\"/api/sendEmail\", formData)\r\n      .then(response => {\r\n          clearState();\r\n      }).catch(error => {\r\n          console.log(error);\r\n      });  \r\n  };\r\n\r\n  return (\r\n    <div className=\"Email\">\r\n    <p>Please send us a Message..</p>\r\n    <UserForm\r\n      cancel={() => {console.log('cancel')}}\r\n      errors={[]}\r\n      onChange={handleChange}\r\n      submit={handleSubmit}\r\n      elements={() => (\r\n        <>        \r\n          <InputField name=\"name\" text=\"Name:\" type=\"text\" onChange={handleChange} placeholder=\"Write here..\"/>\r\n          <InputField name=\"email\" text=\"E-mail:\" type=\"text\" onChange={handleChange} placeholder=\"Write here..\"/>\r\n          <TextArea name=\"message\" text=\"Message:\" rows=\"4\" cols=\"50\" onChange={handleChange} placeholder=\"Write here..\"/>\r\n        </>\r\n      )}\r\n    >    \r\n    </UserForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",["75"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["76","77"],"import React, { useState, useEffect, useReducer } from 'react';\r\nimport UserForm, { Select } from \"./UserForm\";\r\nimport axios from 'axios';\r\n\r\n  const initialState = {\r\n      id: '',\r\n      countryCode: 'AF',\r\n      countryName: 'Afghanistan',\r\n      cityName: 'Kabul'\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    switch(action.type) {\r\n      case 'SET_COUNTRY':\r\n        return {\r\n          ...state, ...action.payload\r\n        };\r\n      case 'SET_CITY':\r\n        return { \r\n          ...state, cityName: action.payload\r\n        };  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n  \r\n  const Weather = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [countries, setCountries] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [weather, setWeather] = useState({});\r\n    const [forecast, setForecast] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    \r\n\r\n    function handleChange(evt) {\r\n      if (evt.target.name === \"countryCode\") {\r\n        const filteredCountry = countries.find(country => country.value === evt.target.value);\r\n        let newCountry = { ...state };\r\n        newCountry = { ...state, \r\n          countryCode: filteredCountry.value, \r\n          countryName: filteredCountry.title\r\n        };\r\n        dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n      } else {\r\n        dispatch({ type: 'SET_CITY', payload: evt.target.value });\r\n      }\r\n    }\r\n    \r\n    useEffect(() => {\r\n      axios.get('/api/countries')\r\n          .then(response => {\r\n              let filteredCountries = [];\r\n              response.data.forEach(function(d) {\r\n                filteredCountries.push({\r\n                   id: d.id,   \r\n                   title: d.name,\r\n                   value: d.code\r\n                 });\r\n               }); \r\n              setCountries(filteredCountries);\r\n          }).catch(err => console.log(err))\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n\r\n      let country = {\r\n            name: state.countryName,\r\n            code: state.countryCode,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/cities', country)\r\n          .then(response => {\r\n              let filteredCity = [];\r\n              response.data.forEach(function(city) {\r\n                filteredCity.push({  \r\n                   id: city.id,  \r\n                   value: city.name,\r\n                   title: city.name\r\n                 });\r\n               }); \r\n              setCities(filteredCity);\r\n          }).catch(err => console.log(err))\r\n  }, [state.countryCode]);\r\n\r\n    React.useEffect(() => {\r\n      const country = {\r\n          name: state.countryName,\r\n          code: state.countryCode,\r\n          cities: null\r\n      };\r\n        \r\n      var headers = {\r\n        'Content-Type': 'application/json' \r\n      };\r\n\r\n      const fetchData = async () => {\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n          setWeather(response.data);\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n\r\n      axios.post('/api/forecast', country, headers).then(response => {\r\n          setList(response.data.list);\r\n          setForecast(response.data);\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n      };\r\n\r\n      fetchData();\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();    \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.cityName,\r\n            code: state.countryCode,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    };\r\n    \r\n\r\n    const WeatherCard = (props) => {\r\n        return ( \r\n          <div className=\"WeatherCard\"> \r\n              <span>loc: {props.weather.loc} date: {props.weather.date}</span>\r\n              <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>\r\n              <div className=\"Cells\">\r\n                <div className=\"Cell\">\r\n                  <small>Current</small>\r\n                  <div>{props.weather.main.temp}°</div>\r\n                </div>\r\n                <div className=\"Cell\">\r\n                  <small>Sky</small>\r\n                  <div>{props.weather.weather[0].main}</div>\r\n                </div>\r\n                <div className=\"Cell\">\r\n                  <div>{props.weather.weather[0].description}</div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      const ForecastCard = (props) => {\r\n        return (\r\n            <div className=\"ForecastCard\">\r\n              <span>{props.date}</span>\r\n              <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>\r\n              <div className=\"Cells\">\r\n                <div className=\"Cell\">\r\n                  <small>High</small>\r\n                  <div>{props.temp.day}°</div>\r\n                </div>\r\n                <div className=\"Cell\">\r\n                  <small>Now</small>\r\n                  <div>{props.temp.min}°</div>\r\n                </div>\r\n                <div className=\"Cell\">\r\n                  <small>Main</small>\r\n                  <div>{props.weather[0].main}</div>\r\n                </div>\r\n                <div className=\"Cell\">\r\n                  <small>&nbsp;</small>\r\n                  <div>{props.weather[0].description}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n      }\r\n     \r\n    const ForecastList = props => {\r\n      return (\r\n      <div className=\"ForecastList\">\r\n          {props.cards.map(card => (\r\n              card.temp !=null && <ForecastCard {...card} />\r\n          ))}\r\n      </div>\r\n      )\r\n    };\r\n\r\n    return (\r\n        <div className=\"Weather\">\r\n            Weather! {state.cityName} - {state.countryName}, {state.countryCode} \r\n            <UserForm\r\n                cancel={() => {console.log('cancel')}}\r\n                errors={[]}\r\n                onChange={handleChange}\r\n                submit={handleSubmit}\r\n                elements={() => (\r\n                   <>\r\n                      <Select id=\"countryCode\" name=\"countryCode\" text=\"Country\"  data={countries} onChange={handleChange}/>\r\n                      <Select id=\"cityName\" name=\"cityName\" text=\"City\" data={cities} onChange={handleChange}/>                    \r\n                   </>\r\n                )}\r\n                >    \r\n            </UserForm>\r\n\r\n            <div className=\"day-container\">\r\n                {weather != null && weather.main\r\n                 ?  <WeatherCard \r\n                    title='Current Local Weather'\r\n                    width='500px'\r\n                    date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n                    weather={weather}\r\n                    />     \r\n                  : <div>No Weather</div>   \r\n              }\r\n            </div>\r\n\r\n            <div className=\"5days-container\">\r\n                {forecast != null \r\n                  ? <ForecastList cards={list} />\r\n                  : <div>No Forecast</div>   \r\n              }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["78","79","80","81"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":10,"column":22,"nodeType":"88","messageId":"89","endLine":10,"endColumn":33},{"ruleId":"86","severity":1,"message":"90","line":12,"column":11,"nodeType":"88","messageId":"89","endLine":12,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":14,"column":10,"nodeType":"88","messageId":"89","endLine":14,"endColumn":15},{"ruleId":"86","severity":1,"message":"92","line":3,"column":20,"nodeType":"88","messageId":"89","endLine":3,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":87,"column":6,"nodeType":"95","endLine":87,"endColumn":25,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":117,"column":8,"nodeType":"95","endLine":117,"endColumn":10,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":49,"column":15,"nodeType":"88","messageId":"89","endLine":49,"endColumn":19},{"ruleId":"86","severity":1,"message":"100","line":49,"column":21,"nodeType":"88","messageId":"89","endLine":49,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":53,"column":30,"nodeType":"103","messageId":"104","endLine":53,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":70,"column":34,"nodeType":"103","messageId":"104","endLine":70,"endColumn":36},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'handleChecked' is assigned a value but never used.","'users' is assigned a value but never used.","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'state.countryName'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook React.useEffect has missing dependencies: 'state.countryCode' and 'state.countryName'. Either include them or remove the dependency array.",["108"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},"Update the dependencies array to be: [state.countryCode, state.countryName]",{"range":"112","text":"113"},{"range":"114","text":"113"},[2620,2639],"[state.countryCode, state.countryName]",[3369,3371]]