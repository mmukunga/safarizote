[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"16","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx":"17","D:\\Temps\\safarizote\\webapp\\src\\pages\\Tableless.jsx":"18"},{"size":595,"mtime":1610369505835,"results":"19","hashOfConfig":"20"},{"size":4955,"mtime":1617271219430,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609698107957,"results":"22","hashOfConfig":"20"},{"size":1623,"mtime":1616974006387,"results":"23","hashOfConfig":"20"},{"size":3543,"mtime":1616863595418,"results":"24","hashOfConfig":"20"},{"size":2507,"mtime":1616911898924,"results":"25","hashOfConfig":"20"},{"size":2074,"mtime":1617314412740,"results":"26","hashOfConfig":"20"},{"size":346,"mtime":1616842614499,"results":"27","hashOfConfig":"20"},{"size":1083,"mtime":1617228008999,"results":"28","hashOfConfig":"20"},{"size":889,"mtime":1616751183261,"results":"29","hashOfConfig":"20"},{"size":3883,"mtime":1616751071384,"results":"30","hashOfConfig":"20"},{"size":2014,"mtime":1616751208006,"results":"31","hashOfConfig":"20"},{"size":2371,"mtime":1611692147285,"results":"32","hashOfConfig":"20"},{"size":6834,"mtime":1617263780986,"results":"33","hashOfConfig":"20"},{"size":4654,"mtime":1616912264952,"results":"34","hashOfConfig":"20"},{"size":552,"mtime":1615500361803,"results":"35","hashOfConfig":"20"},{"size":4505,"mtime":1616876707115,"results":"36","hashOfConfig":"20"},{"size":989,"mtime":1617309642019,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1j2qoq7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],["82","83"],"D:\\Temps\\safarizote\\webapp\\src\\App.js",["84"],"import React from 'react';\nimport { Route, Switch, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Card from './pages/Card';\nimport Safaris from './pages/Safaris';\nimport Home from './pages/Home';\nimport AboutUs from './pages/AboutUs';\nimport Shopping from './pages/Shopping';\nimport Lotto from './pages/Lotto';\nimport BackUp from './pages/BackUp';\nimport SignIn from './pages/SignIn';\nimport Email from './pages/Email';\nimport Weather from './pages/Weather';\nimport Stock from './pages/Stock';\nimport Private from './pages/Private';\n\nfunction App() {\n  const selectStyle = {\n      width: '60px', \n      padding: '2px', \n      background: '#2a9df4'\n  };\n\n  const displayHome = {\n    color: 'blue'\n  }\n\n  const DropDown = ({ history }) => {\n    const onChange = (e) => {\n      history.push(`${e.target.value}`);\n    };\n\n    return (\n      <select onChange={onChange} style={selectStyle}>\n        <option value=\"/tipping\">Tipping</option>\n        <option value=\"/shopping\">Shopping</option>\n        <option value=\"/stock\">Stock Market</option>\n        <option value=\"/backUp\">Dir BackUp</option>\n      </select>\n    );\n  }\n  \n  const Menu = withRouter(DropDown);\n  \n  const handleLogout = () => {\n      localStorage.clear();\n  };\n\n  const Toolbar = (props) => {\n\n    const images = [\n        './images/jeep.jpg',\n        './images/leopard.jpg',\n        './images/cheeter.jpg',\n        './images/cheeters.jpg',\n        './images/savannah.jpg',\n        './images/gnus.jpg',\n        './images/tourists.jpg',\n        './images/drought.jpg'\n    ];\n\n    const [selectedImage, setSelectedImage] = React.useState(images[0]);\n\n    const imageStyles = {\n      backgroundImage: `url(${selectedImage})`, \n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      display: props.displayHome,\n      border:'4px solid #fefeef'\n    };\n    React.useEffect(() => {\n        const intervalID = setTimeout(() =>  {\n            const id = Math.floor(Math.random() * (7 - 0) + 0);\n            setSelectedImage(images[id]);\n        }, 3000);\n    \n        return () => clearInterval(intervalID);\n    }, [selectedImage]);\n\n    return (\n        <header style={imageStyles} className=\"App-header\">  \n            <nav className=\"Navigation\">\n              <div className=\"NavMenu\">\n                <span className=\"Nav_link Logo\">\n                  <img src={logo} className=\"App-logo\" alt=\"logo\"></img>\n                </span>\n                <NavLink to=\"/\" className=\"Nav_link\">Safaris</NavLink>\n                <NavLink to=\"/aboutUs\" className=\"Nav_link\">About&nbsp;Us</NavLink>\n                <NavLink to=\"/home\" className=\"Nav_link\">Home</NavLink>\n                <NavLink to=\"/signIn\" className=\"Nav_link\">Login</NavLink>\n                <NavLink to=\"/email\" className=\"Nav_link\">Email</NavLink>\n                <NavLink to=\"/weather\" className=\"Nav_link\">Weather</NavLink>\n                <Menu/>\n                <button onClick={handleLogout} className=\"LogOut\">Logout</button>\n              </div>\n            </nav> \n            <p className=\"App-title\">\n              The most revered of Africaâ€™s safari destinations, Kenya is located in \n              East Africa and boasts the Masai Mara National Park, renowned for its \n              abundant wildlife and annual Great Migration.<br/>\n              Common Trips <code>src/App.js</code> pluss the most preffered.<br/>    \n              <Link to=\"/email\" style={{color: 'white'}} activeStyle={{color: 'red'}}>Please Contact Us!</Link><br/>     \n              <a\n                className=\"App-link\"\n                href=\"https://safarizote.herokuapp.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Safari Zote\n              </a>\n            </p>\n        </header>\n      );\n    }\n\n  const Layout = (props) => {\n      return (\n        <div>\n          <Toolbar displayHome={props.displayHome}/>\n          <main>\n            {props.children}\n          </main>\n        </div>\n      );\n  }\n  \n  return (\n    <div className=\"App\"> \n      <Card className=\"OuterCard\" fontColor=\"black\">\n        <Layout displayHome={displayHome}>\n          <Switch>\n              <Route exact path=\"/\" component={Safaris} />\n              <Route path=\"/aboutUs\" component={AboutUs} />\n              <Private path=\"/shopping\" component={Shopping} exact/>\n              <Route path=\"/home\" component={Home} />\n              <Private path=\"/tipping\" component={Lotto} exact/>\n              <Route path=\"/signIn\" component={SignIn} />\n              <Route path=\"/email\" component={Email} />\n              <Route path=\"/weather\" component={Weather} />\n              <Private path=\"/stock\" component={Stock} exact/>\n              <Private path=\"/backUp\" component={BackUp} exact/>\n          </Switch>\n        </Layout>\n      </Card> \n    </div>\n  );\n}\n\nexport default App;","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx",["85"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Home = () => {\r\n   const [data, setData] = useState([]);\r\n   const [counts, setCounts] = useState([]);\r\n   const [clientInfo, setClientInfo] = useState({});\r\n   useEffect(() => {\r\n      axios.get('https://extreme-ip-lookup.com/json/')\r\n        .then(response => {\r\n            axios.post('/api/saveVisit', {\r\n               url: response.data.ipName,\r\n               browser: 'Microsoft Edge',\r\n               dateCreated: new Date().toUTCString\r\n            }).then(response => {\r\n               console.log(response)\r\n            });\r\n            setClientInfo(response.data);\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      axios.get('/api/allHits').then(response => {\r\n        const mediaTypes = response.data.map(dataItem => dataItem.url) \r\n        .filter((mediaType, index, array) => array.indexOf(mediaType) === index); // filter out duplicates\r\n        const counts = mediaTypes.map(dataItem => ({\r\n            type: dataItem,\r\n            count: response.data.filter(item => item.url == dataItem).length\r\n        }));\r\n\r\n        setData(response.data);\r\n        setCounts(counts);\r\n\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n    }, [clientInfo]);\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n            <h4 style={{ margin: '20px', fontStyle: 'bold', textAlign: 'left'}}>Safari Zote!</h4>\r\n            <p style={{ margin: '20px', textAlign: 'left'}}>People also ask about this</p>\r\n            <ul className=\"vList\">\r\n               <li>How much does a safari cost in Kenya?</li>\r\n               <li>What is the best safari in Kenya?</li>\r\n               <li>What is the best time to go on safari in Kenya?</li>\r\n               <li>Is Kenya safe for Safari?</li>\r\n            </ul>\r\n            <table className=\"Table\">  \r\n              <tr>\r\n                <th></th>\r\n                <th>Url</th>\r\n                <th>Hits</th>\r\n              </tr>        \r\n               {counts.map((item,idx) => \r\n                 <tr key={idx}>\r\n                   <td>{idx}</td>\r\n                   <td>{item.type}</td>\r\n                   <td>{item.count}</td>\r\n                 </tr>\r\n               )}\r\n            </table>\r\n            <p style={{ margin: '20px', textAlign:'left'}}>Number of Hits: { data.length }</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["86","87","88"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table';\r\nimport Card from './Card';\r\nimport Tableless from './Tableless';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    \r\n    const [pageSize, setPageSize] = useState(2);\r\n    const handleChecked = (e) => {\r\n      setChecked(!checked);\r\n      console.log(e);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          title: '<span class=\\'SafariTitle\\'>'+ safari.title + '<span>',\r\n          description: safari.description + ' <strong>USD ' + safari.price + '<strong>',\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <Card className=\"InnerCard\" fontColor=\"black\">\r\n          <h3>Our Safaris</h3>\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n          {currentItems && currentItems.length > 0 \r\n           ? <Tableless data={currentItems}/> \r\n           : <p>No Data Found!!</p>}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["89","90"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\" >\r\n            <p>Contact Us!!</p>\r\n            <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div> \r\n                <div className=\"col-75\"> \r\n                    <input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"message\">Message</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <textarea id=\"message\" name=\"message\"\r\n                        className=\"expand\" \r\n                        rows=\"10\"\r\n                        placeholder=\"Write something..\" \r\n                        className=\"form-control\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                  <input type=\"submit\" value=\"Send Message\" className=\"lg-button btn-primary\"/>\r\n                </div>  \r\n            </form>\r\n            </div>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["91","92","93"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      city: 'Kabul',\r\n      code: \"AF\",\r\n      name: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, city: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [cities, setCities] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n            setCountries(response.data);\r\n        }).catch(err => console.log(err));\r\n\r\n         let country = {\r\n              name: 'Kabul',\r\n              code: \"AF\",\r\n              cities: null\r\n        };\r\n        \r\n      axios.post('/api/cities', country)\r\n        .then(response => {\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      var headers = {\r\n        'Content-Type': 'application/json' \r\n      };\r\n\r\n      const country = {\r\n            name: state.city,\r\n            code: state.code,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/weather', country, headers)\r\n        .then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => { console.log(err)});\r\n\r\n      axios.post('/api/forecast', country, headers)\r\n        .then(response => {\r\n          setList(response.data.list);\r\n          setForecast(response.data);\r\n       }).catch(err => {console.log(err)});\r\n\r\n    }, [countries]);\r\n\r\n    React.useEffect(() => { \r\n\r\n      let country = {\r\n        name: state.name,\r\n        code: state.code,\r\n        cities: null\r\n      };\r\n      \r\n      axios.post('/api/cities', country)\r\n        .then(response => {  \r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, [state.code]);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.name === event.target.value);\r\n            });          \r\n            let newCountry = { ...state, \r\n                code: filteredCountry.code, \r\n                name: filteredCountry.name\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.name,\r\n            code: state.code,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form class=\"form-inline\"  onSubmit={handleSubmit}>\r\n          <select id=\"countryCode\" name=\"countryCode\" onChange={handleChange}>    \r\n              <option value=\"none\">Select Country</option>   \r\n              {countries.map((country) => (\r\n                  <option value={country.name}>{country.code}</option>\r\n              ))}    \r\n          </select>\r\n          <select id=\"cityName\" name=\"cityName\" onChange={handleChange}>    \r\n              <option value=\"none\">Select City</option>    \r\n              {state.cities && state.cities.map((city) => (\r\n                  <option value={city.name}>{city.name}</option>\r\n              ))}\r\n            </select>  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        {weather != null && weather.main\r\n          ? <WeatherCard \r\n            title='Current Local Weather'\r\n            date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n            weather={weather}\r\n            />     \r\n          : <div>No Weather</div>   \r\n        }\r\n\r\n        <h3>Weather Forecast</h3>\r\n        {forecast != null \r\n          ? <ForecastList cards={list} />\r\n          : <div>No Forecast</div>   \r\n        }\r\n\r\n        </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    const unix_tm = props.weather.dt;\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n         <div  className=\"Current\">\r\n          Cod: {props.weather.cod} Date: {new Date(unix_tm*1000).toLocaleDateString()}\r\n            <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} \r\n                  alt=\"wthr img\" \r\n                  className=\"wthrImg\"/>\r\n          </div>      \r\n          <div className=\"Current\">\r\n              <div className=\"CellDiv\"><small>Temp</small> {props.weather.main.temp}Â°</div>\r\n              <div className=\"CellDiv\">{props.weather.weather[0].description}</div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>          \r\n        <div>High</div>\r\n        <div>{props.temp.day}Â°</div>\r\n        <div>Now</div>\r\n        <div>{props.temp.min}Â°</div>\r\n        <div>{props.weather[0].description}</div>         \r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["94","95","96"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  tickers: [],\r\n  ticker: ''\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case 'SET_DATA':\r\n        return {\r\n            ...state,\r\n            error: '',\r\n            tickers: [...action.payload],\r\n        }\r\n        case 'SET_TICKER':\r\n          return {\r\n              ...state,\r\n              error: '',\r\n              ticker:action.payload,\r\n          }  \r\n      case 'SET_ERROR':\r\n        return {\r\n            ...state,\r\n            error: \"There are some errors\",\r\n            tickers: [],\r\n        }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nconst Stock = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    //const [tickers, setTickers] = useState([]);\r\n    const [timestamp, setTimestamp] = useState([]);\r\n    const [close, setClose] = useState([]);\r\n    const [high, setHigh] = useState([]);\r\n    const [low, setLow] = useState([]);\r\n    const [open, setOpen] = useState([]);\r\n    const [volume, setVolume] = useState([]);\r\n    const [dateTime, setDateTime] = useState('');\r\n    const [stockCompany, setStockCompany] = useState('');\r\n    \r\n    const handleSelectItem = (event) => {\r\n      const { name, value } = event.target;\r\n\r\n      let tickers = state.tickers;\r\n      for (var i = 0; i < tickers.length; i++) { \r\n        if (event.target.name===tickers[i].name) {\r\n            tickers[i].selected=true;\r\n            setStockCompany(tickers[i].description);\r\n        } else {\r\n            tickers[i].selected=false;\r\n        }\r\n      }\r\n      dispatch({ type: 'SET_DATA', payload: tickers });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      let ticker = '';\r\n      const tickers = state.tickers;\r\n\r\n      for (var i = 0; i < tickers.length; i++) { \r\n          if (tickers[i].selected==true){\r\n              ticker = tickers[i];\r\n          }\r\n      }\r\n  \r\n      dispatch({ type: 'SET_TICKER', payload: tickers[i] });\r\n\r\n      axios.post('/api/current', ticker).then((response) => {\r\n        setDateTime(response.headers.date);\r\n        setTimestamp(response.data.chart.result[0].timestamp);\r\n        setClose(response.data.chart.result[0].indicators.quote[0].close);\r\n        setHigh(response.data.chart.result[0].indicators.quote[0].high);\r\n        setLow(response.data.chart.result[0].indicators.quote[0].low);\r\n        setOpen(response.data.chart.result[0].indicators.quote[0].open);\r\n        setVolume(response.data.chart.result[0].indicators.quote[0].volume);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      }) \r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/tickers')\r\n            .then(res => {\r\n              dispatch({ type: 'SET_DATA', payload: res.data });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              dispatch({ type: 'SET_ERROR' });\r\n            });\r\n    }, []);\r\n\r\n    const Quote = ({name, list}) => {\r\n      return (\r\n        <div className=\"QuoteContainer\">\r\n          <p>{name}</p>\r\n          <ul className=\"QuoteItems\">\r\n            {list.map((item, idx) => (\r\n              <li key={idx}>{ name === 'Timestamp' ? (new Date(item*1000)).toLocaleDateString() : item.toFixed(2)}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <Card className=\"InnerCard\" fontColor=\"black\">\r\n        <p>Stock!!</p>\r\n        <form onSubmit={handleSubmit} className=\"StockWrapper\">\r\n        <ul className=\"StockList\">\r\n            { state.tickers && state.tickers.map(ticker =>\r\n              <li key={ticker.id}>              \r\n                <input id={ticker.id} name={ticker.name}\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectItem}\r\n                  checked={ticker.selected} \r\n                />\r\n                <label htmlFor={`item-${ticker.id}`}>{ticker.description}</label>\r\n              </li>) }\r\n              <li><input type=\"submit\" value=\"Submit\"/></li>\r\n        </ul>\r\n        </form>\r\n        <p>{stockCompany} {dateTime}</p>\r\n        <div className=\"StockItem\">\r\n          <div className=\"BoersDetails\">\r\n              <Quote name=\"Timestamp\" list={timestamp}/>\r\n              <Quote name=\"Close\" list={close}/>\r\n              <Quote name=\"Low\" list={low}/>\r\n              <Quote name=\"High\" list={high}/>\r\n              <Quote name=\"Open\" list={open}/>\r\n              <Quote name=\"Volume\" list={volume}/>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default Stock;\r\n","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx",["97","98","99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport Card from './Card';\r\nimport axios from 'axios';\r\n\r\n  const BackUp = () => {\r\n    const [category, setCategory] = React.useState({});\r\n    const myPC = {parentId: null, id: 0, name: \"MyPc\", isChecked: false, dateCreated: new Date()};\r\n\r\n    const [groups, setGroups] = React.useState([\r\n        {parentId: 0, id: 1, name: \"C:SimTemps\", isChecked: false, dateCreated: new Date()},\r\n        {parentId: 0, id: 2, name: \"C:Projects\", isChecked: false, dateCreated: new Date()},\r\n        {parentId: 0, id: 3, name: \"C:FamilieAlbum\", isChecked: false, dateCreated: new Date()},\r\n        {parentId: 0, id: 4, name: \"C:Temps\", isChecked: false, dateCreated: new Date()}\r\n      ]);\r\n\r\n    const [fruites, setFruites] = React.useState([\r\n      { parentId: 1, id: 5, name: \"D:SimTemps\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 1, id: 6, name: \"E:SimTemps\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 2, id: 7, name: \"D:Projects\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 2, id: 8, name: \"E:Projects\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 3, id: 9, name: \"D:FamilieAlbum\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 3, id: 10, name: \"E:FamilieAlbum\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 4, id: 11, name: \"D:Temps\", isChecked: false, dateCreated: new Date() },\r\n      { parentId: 4, id: 12, name: \"E:Temps\", isChecked: false, dateCreated: new Date() }\r\n    ]);\r\n        \r\n    React.useEffect(() => {\r\n      axios.get('/api/categories').then(response => {\r\n          console.log(response);\r\n      }).catch(error => {\r\n          console.log(error);\r\n      });\r\n    }, []);  \r\n\r\n    const CheckBox = props => {\r\n      return (\r\n        <li>\r\n          <input\r\n            key={props.id}\r\n            onChange={props.handleCheckChieldElement}\r\n            type=\"checkbox\"\r\n            checked={props.isChecked}\r\n            value={props.value}\r\n          />{\" \"}\r\n          {props.label}\r\n        </li>\r\n      );\r\n    };\r\n\r\n    const handleAllChecked = id => event => {\r\n      let fruitesTemp = [...fruites];\r\n      fruitesTemp\r\n        .filter(f => f.parentId === id)\r\n        .forEach(fruite => {\r\n          fruite.isChecked = event.target.checked;\r\n        });\r\n        setFruites(fruitesTemp);\r\n    };\r\n\r\n    const handleCheckChieldElement = event => {\r\n      let fruitesTemp = [...fruites];\r\n      fruitesTemp.forEach(fruite => {\r\n        if (`${fruite.parentId}-${fruite.id}` === event.target.value)\r\n          fruite.isChecked = event.target.checked;\r\n      });\r\n      setFruites(fruitesTemp);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      let selectedItems = [];\r\n      let fruitesTemp = [...fruites];\r\n      fruitesTemp.forEach(f => {\r\n        if (f.isChecked === true) { \r\n          selectedItems = [...selectedItems, f]; \r\n        }\r\n      });\r\n\r\n      axios.post(\"/api/backUp\", {\r\n          name: 'Arkiv',\r\n          dateCreated: new Date(),\r\n          parent: null\r\n        })\r\n        .then((response) => { \r\n          console.log(response);\r\n        });\r\n\r\n      setCategory({});\r\n      console.log(category + \" Submited OK!!\");\r\n    };\r\n\r\n    return (\r\n      <Card className=\"InnerCard\" fontColor=\"black\">\r\n          <strong>Tree BackUp</strong>\r\n          <h3> Check and Uncheck All Example </h3>\r\n          <form onSubmit={handleSubmit}>\r\n          <div className=\"BackUps\">\r\n          {groups.map(item => (\r\n            <div>\r\n              <input type=\"checkbox\" onChange={handleAllChecked(item.id)} value=\"checkedall\"/>{\" \"}\r\n              {item.name}\r\n              <ul>\r\n                {fruites.filter(fruit => fruit.parentId === item.id).map((fruite, index) => {\r\n                    return (\r\n                      <CheckBox\r\n                        key={`${item.id}-${fruite.id}`}\r\n                        handleCheckChieldElement={handleCheckChieldElement}\r\n                        {...fruite}\r\n                        value={`${item.id}-${fruite.id}`}\r\n                        label={fruite.name}\r\n                      />\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          <div className=\"row\">\r\n            <input type=\"submit\" value=\"Submit!\" className=\"lg-button btn-primary\"/>\r\n          </div>  \r\n          </form>\r\n      </Card>\r\n    );\r\n  }\r\n  export default BackUp;  ","D:\\Temps\\safarizote\\webapp\\src\\pages\\Tableless.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":82,"column":8,"nodeType":"107","endLine":82,"endColumn":23,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":31,"column":58,"nodeType":"111","messageId":"112","endLine":31,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":12,"column":22,"nodeType":"115","messageId":"116","endLine":12,"endColumn":33},{"ruleId":"113","severity":1,"message":"118","line":13,"column":11,"nodeType":"115","messageId":"116","endLine":13,"endColumn":24},{"ruleId":"113","severity":1,"message":"119","line":26,"column":12,"nodeType":"115","messageId":"116","endLine":26,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":102,"column":25,"nodeType":"122","endLine":102,"endColumn":49},{"ruleId":"113","severity":1,"message":"123","line":34,"column":12,"nodeType":"115","messageId":"116","endLine":34,"endColumn":18},{"ruleId":"105","severity":1,"message":"124","line":82,"column":8,"nodeType":"107","endLine":82,"endColumn":19,"suggestions":"125"},{"ruleId":"105","severity":1,"message":"126","line":99,"column":8,"nodeType":"107","endLine":99,"endColumn":20,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":49,"column":15,"nodeType":"115","messageId":"116","endLine":49,"endColumn":19},{"ruleId":"113","severity":1,"message":"129","line":49,"column":21,"nodeType":"115","messageId":"116","endLine":49,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":69,"column":34,"nodeType":"111","messageId":"112","endLine":69,"endColumn":36},{"ruleId":"113","severity":1,"message":"130","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"131","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"132","line":7,"column":11,"nodeType":"115","messageId":"116","endLine":7,"endColumn":15},{"ruleId":"113","severity":1,"message":"133","line":9,"column":20,"nodeType":"115","messageId":"116","endLine":9,"endColumn":29},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.","ArrayExpression",["136"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'setPageSize' is assigned a value but never used.","'handleChecked' is assigned a value but never used.","'replyMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'cities' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'state.city' and 'state.code'. Either include them or remove the dependency array.",["137"],"React Hook React.useEffect has a missing dependency: 'state.name'. Either include it or remove the dependency array.",["138"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'myPC' is assigned a value but never used.","'setGroups' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [images, selectedImage]",{"range":"145","text":"146"},"Update the dependencies array to be: [countries, state.city, state.code]",{"range":"147","text":"148"},"Update the dependencies array to be: [state.code, state.name]",{"range":"149","text":"150"},[2192,2207],"[images, selectedImage]",[2335,2346],"[countries, state.city, state.code]",[2773,2785],"[state.code, state.name]"]