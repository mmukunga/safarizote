[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx":"16","D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx":"17","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserService.jsx":"18"},{"size":606,"mtime":1619157646410,"results":"19","hashOfConfig":"20"},{"size":5007,"mtime":1631717334655,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1618608163149,"results":"22","hashOfConfig":"20"},{"size":1777,"mtime":1630223760563,"results":"23","hashOfConfig":"20"},{"size":3580,"mtime":1630223760562,"results":"24","hashOfConfig":"20"},{"size":7208,"mtime":1631202236031,"results":"25","hashOfConfig":"20"},{"size":646,"mtime":1630345339868,"results":"26","hashOfConfig":"20"},{"size":1083,"mtime":1617228008999,"results":"27","hashOfConfig":"28"},{"size":889,"mtime":1630223760562,"results":"29","hashOfConfig":"20"},{"size":4385,"mtime":1630223760562,"results":"30","hashOfConfig":"20"},{"size":2447,"mtime":1631718030320,"results":"31","hashOfConfig":"20"},{"size":2371,"mtime":1611692147285,"results":"32","hashOfConfig":"28"},{"size":7150,"mtime":1630223760562,"results":"33","hashOfConfig":"20"},{"size":4719,"mtime":1631202241734,"results":"34","hashOfConfig":"20"},{"size":572,"mtime":1631553245475,"results":"35","hashOfConfig":"20"},{"size":201,"mtime":1631426345446,"results":"36","hashOfConfig":"20"},{"size":2544,"mtime":1631202877853,"results":"37","hashOfConfig":"20"},{"size":551,"mtime":1631717429191,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uxk0ch",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1j2qoq7",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],"D:\\Temps\\safarizote\\webapp\\src\\App.js",["83","84","85","86","87","88"],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["89","90","91","92","93","94","95","96","97","98","99"],"import React, { useState, useRef } from 'react';\r\nimport parse from \"html-react-parser\";\r\nimport moment from 'moment';\r\nimport Bowser from \"bowser\";\r\nimport 'font-awesome/less/font-awesome.less';\r\n\r\nimport Big_Buck_Bunny from \"../media/Big_Buck_Bunny.mp4\";\r\nimport kenya_safari from \"../media/kenya-safari.mp4\";\r\nimport kilimanjaro from \"../media/kilimanjaro.mp4\";\r\nimport MOV_FILE from \"../media/MOV_FILE.mov\";\r\nimport preview from \"../media/preview.mp4\";\r\nimport the_globe from \"../media/the_globe.mov\";\r\n\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [numberOfHits, setNumberOfHits] = useState([]);\r\n    const [pageSize, setPageSize] = useState(2);\r\n    const [userPos, setUserPos] = useState({lat: null, long: null});\r\n    const [position, setPosition] = useState({});\r\n\r\n    const videoUrl = 'https://www.youtube.com/watch?v=3qW5z4xeiac';\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      document.title = \"Mombasa Safari Tours to Kenya's Major National Parks. Masai Mara, Tsavo East, Ngutuni, Tsavo West, Amboseli also to other najor destinations in Kenya\";\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n      const api_key = '94a2ea2cd89d43ea94b26702f95a9bb4';\r\n\r\n      axios.get('https://ipinfo.io/json').then(response => {\r\n           axios.get(`https://ipgeolocation.abstractapi.com/v1/?api_key=${api_key}&ip_address=${response.data.ip}`)\r\n            .then(resp => {\r\n              const data = resp.data;\r\n              const userBrowser = Bowser.parse(window.navigator.userAgent);\r\n              const metrics = {\r\n                url: response.data.hostname,\r\n                browser: userBrowser.browser.name,\r\n                browserVersion: userBrowser.browser.version,\r\n                browserOsName: userBrowser.os.name,\r\n                browserOsVersion: userBrowser.os.version,\r\n                city: data.city,\r\n                organization:  resp.data.connection.autonomous_system_organization,\r\n                connectionType: resp.data.connection.connection_type,\r\n                continent: resp.data.continent,\r\n                continentCode: resp.data.continent_code,\r\n                country: resp.data.country,\r\n                countryCode: resp.data.country_code,\r\n                currencyName: resp.data.currency.currency_name,\r\n                currencyCode: resp.data.currency.currency_code,\r\n                emoji: resp.data.flag.emoji,\r\n                flagPng: resp.data.flag.png,\r\n                flagSvg: resp.data.flag.svg,\r\n                ipAddress: resp.data.ip_address,\r\n                latitude: resp.data.latitude,\r\n                longitude: resp.data.longitude,\r\n                postalCode: resp.data.postal_code,\r\n                region: resp.data.region,\r\n                regionIsoCode: resp.data.region_iso_code,\r\n                timezoneName: resp.data.timezone.name,\r\n                timezoneAbbreviation: resp.data.timezone.abbreviation,\r\n                presentTime: resp.data.timezone.current_time,\r\n                dateCreated: moment.now()\r\n              }\r\n\r\n              axios.post('/api/saveVisit', metrics).then(response => {\r\n                setNumberOfHits(response.data);\r\n              });\r\n\r\n            });\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n          /* Map each item of nodes to a nested array where each is a row of two columns */\r\n          const safarisArray = safaris.map((safari) => [safari.url, safari.browser]);\r\n          var result = [];\r\n          safarisArray.reduce(function(res, value) {\r\n            if (!res[value.url]) {\r\n              res[value.url] = { Url: value.url, Url: value.browser, qty: 0 };\r\n              result.push(res[value.url])\r\n            }\r\n            res[value.url].qty += 1;\r\n            return res;\r\n          }, {});\r\n\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          title: '<span className=\\'SafariTitle\\'>'+ safari.title + '<span>',\r\n          description: safari.description + ' <strong>USD ' + safari.price + '<strong>',\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n\r\n  const SafariTours = props => {\r\n    const Accordion = ({ children, title, isExpand = false, video, idx}) => {\r\n      const [expand, setExpand] = useState(isExpand);\r\n\r\n      const mod = idx % 2;\r\n      return (\r\n        <div className={`box ${mod!=0 ? 'oddRow' : ''}`}>\r\n          <div onClick={() => setExpand(expand => !expand)} class='SafariDetails'>  \r\n            <VideoPlayer video={video}/>{parse(title)} <span className=\"icon\"><i className={`fa fa-play-circle${!expand ? ' down' : ''}`}></i></span>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n          {expand && <div>{children}</div>}\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    const videos = props.videos;\r\n    return (\r\n      <div>\r\n        {props && props.data.map((card, idx) =>{ return (\r\n          <Accordion isExpand={false} title={card.title} video={videos[idx]} idx={idx}>\r\n            {parse(card.description)}\r\n          </Accordion>\r\n        ); })}\r\n      </div>\r\n    );\r\n  } \r\n\r\n  const VideoPlayer = (props) => {\r\n    const videoRef = useRef(null);\r\n   \r\n    function playVideo() {\r\n      videoRef.current.play();\r\n    }\r\n  \r\n    function pauseVideo() {\r\n      videoRef.current.pause();\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <video ref={videoRef} controls autoPlay loop muted className='SafariSnap'>\r\n          {/* Of course it's the big buck bunny! */}\r\n          <source src={props.video} type=\"video/mp4\"/>\r\n        </video>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const videos = [ Big_Buck_Bunny, kenya_safari, kilimanjaro, MOV_FILE, preview, the_globe ];\r\n  return (\r\n    <Card className=\"InnerCard\" fontColor=\"black\">\r\n        <ul id=\"page-numbers\">\r\n         <li style={{paddingLeft:'1em',fontStyle: 'oblique'}}><span>Hits: { numberOfHits.length } </span></li> \r\n         <li style={{paddingLeft:'1em',fontStyle: 'oblique'}}><span>Our Safaris: </span></li> \r\n         {renderPageNumbers}\r\n        </ul>\r\n\r\n        {currentItems && currentItems.length > 0 \r\n           ? <SafariTours data={currentItems} videos={videos}/> \r\n           : <p>No Data Found!!</p>}  \r\n                     \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",["100","101"],"import React from 'react';\r\nimport Radium, {StyleRoot} from 'radium';\r\n\r\nconst Card = (props) => {\r\n  const { className, fontColor, children } = props;\r\n  const labelStyles = {\r\n    divStyle: {\r\n      fontSize: '2.0vw',\r\n      margin: '2px',\r\n      padding: '2px',\r\n      border: '2px solid red',\r\n      '@media (max-width: 1366px)': {\r\n          backgroundColor: 'green',\r\n          fontSize: '24px'\r\n      }\r\n    }\r\n  };\r\n\r\n  const StyleRoot = Radium.StyleRoot;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyleRoot style={labelStyles.divStyle}>\r\n        {children}\r\n      </StyleRoot>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n\r\n","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],["102","103"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["104","105"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = (props) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Use this form or send us email at mkunsim@gmail.com. Your name and email address will not be published, sold, or shared. We will not spam you\";\r\n      }, []);\r\n\r\n    console.log('props.location.state:= ' + props.location.state);\r\n    \r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            title: props.title===null ? 'Dan Johnson' : props.title, \r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\" >\r\n            <p>Contact Us!!</p>\r\n            <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div> \r\n                <div className=\"col-75\"> \r\n                    <input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">      \r\n                        <label htmlFor=\"message\">Message</label>\r\n                    </div> \r\n                    <div className=\"col-75\">  \r\n                        <textarea id=\"message\" name=\"message\"\r\n                            className=\"expand\" \r\n                            rows=\"10\"\r\n                            placeholder=\"Write something..\" \r\n                            className=\"form-control\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-100\">    \r\n                        <input type=\"submit\" value=\"Send Message\" className=\"lg-button btn-primary\"/>\r\n                    </div>  \r\n                </div>  \r\n            </form>\r\n            </div>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",["106","107"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["108","109","110"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      city: 'Kabul',\r\n      iso2: \"AF\",\r\n      name: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, city: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [cities, setCities] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      document.title = \"Get the World weather forecast. Access hourly, 1 day and 5 day forecasts along with up to the minute reports and videos from safarizote.herokuapp.com\";\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n            console.log(response);\r\n            setCountries(response.data);\r\n        }).catch(err => console.log(err));\r\n\r\n         let country = {\r\n              name: 'Kabul',\r\n              iso2: \"AF\",\r\n              cities: null\r\n        };\r\n \r\n      axios.post('/api/cities', country)\r\n        .then(response => {\r\n            console.log(response);\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      var headers = {\r\n        'Content-Type': 'application/json' \r\n      };\r\n\r\n      const country = {\r\n            name: state.city,\r\n            iso2: state.iso2,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/weather', country, headers)\r\n        .then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => { console.log(err)});\r\n\r\n      axios.post('/api/forecast', country, headers)\r\n        .then(response => {\r\n          setList(response.data.list);\r\n          setForecast(response.data);\r\n       }).catch(err => {console.log(err)});\r\n\r\n    }, [countries]);\r\n\r\n    React.useEffect(() => { \r\n\r\n      let country = {\r\n        name: state.name,\r\n        iso2: state.iso2,\r\n        cities: null\r\n      };\r\n\r\n      axios.post('/api/cities', country)\r\n        .then(response => {  \r\n            console.log(response);\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, [state.iso2]);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.iso2 === event.target.value);\r\n            });          \r\n            let newCountry = { ...state, \r\n                iso2: filteredCountry.iso2, \r\n                name: filteredCountry.name\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.name,\r\n            iso2: state.iso2,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form class=\"form-inline\"  onSubmit={handleSubmit}>\r\n          <select id=\"countryCode\" name=\"countryCode\" onChange={handleChange}>    \r\n              <option value=\"none\">Select Country</option>   \r\n              {countries.map((country) => (\r\n                  <option value={country.iso2}>{country.name}</option>\r\n              ))}    \r\n          </select>\r\n          <select id=\"cityName\" name=\"cityName\" onChange={handleChange}>    \r\n              <option value=\"none\">Select City</option>    \r\n              {state.cities && state.cities.map((city) => (\r\n                  <option value={city.name}>{city.name}</option>\r\n              ))}\r\n            </select>  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        {weather != null && weather.main\r\n          ? <WeatherCard \r\n            title='Current Local Weather'\r\n            date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n            weather={weather}\r\n            />     \r\n          : <div>No Weather</div>   \r\n        }\r\n\r\n        <h3>Weather Forecast</h3>\r\n        {forecast != null \r\n          ? <ForecastList cards={list} />\r\n          : <div>No Forecast</div>   \r\n        }\r\n\r\n        </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    const unix_tm = props.weather.dt;\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n         <div  className=\"Current\">\r\n          Cod: {props.weather.cod} Date: {new Date(unix_tm*1000).toLocaleDateString()}\r\n            <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} \r\n                  alt=\"wthr img\" \r\n                  className=\"wthrImg\"/>\r\n          </div>      \r\n          <div className=\"Current\">\r\n              <div className=\"CellDiv\"><small>Temp</small> {props.weather.main.temp}°</div>\r\n              <div className=\"CellDiv\">{props.weather.weather[0].description}</div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>          \r\n        <div>High</div>\r\n        <div>{props.temp.day}°</div>\r\n        <div>Now</div>\r\n        <div>{props.temp.min}°</div>\r\n        <div>{props.weather[0].description}</div>         \r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["111","112","113"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  tickers: [],\r\n  ticker: ''\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case 'SET_DATA':\r\n        return {\r\n            ...state,\r\n            error: '',\r\n            tickers: [...action.payload],\r\n        }\r\n        case 'SET_TICKER':\r\n          return {\r\n              ...state,\r\n              error: '',\r\n              ticker:action.payload,\r\n          }  \r\n      case 'SET_ERROR':\r\n        return {\r\n            ...state,\r\n            error: \"There are some errors\",\r\n            tickers: [],\r\n        }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nconst Stock = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [timestamp, setTimestamp] = useState([]);\r\n    const [close, setClose] = useState([]);\r\n    const [high, setHigh] = useState([]);\r\n    const [low, setLow] = useState([]);\r\n    const [open, setOpen] = useState([]);\r\n    const [volume, setVolume] = useState([]);\r\n    const [dateTime, setDateTime] = useState('');\r\n    const [stockCompany, setStockCompany] = useState('');\r\n    \r\n    const handleSelectItem = (event) => {\r\n      const { name, value } = event.target;\r\n\r\n      let tickers = state.tickers;\r\n      for (var i = 0; i < tickers.length; i++) { \r\n        if (event.target.name===tickers[i].name) {\r\n            tickers[i].selected=true;\r\n            setStockCompany(tickers[i].description);\r\n        } else {\r\n            tickers[i].selected=false;\r\n        }\r\n      }\r\n      dispatch({ type: 'SET_DATA', payload: tickers });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      let ticker = '';\r\n      const tickers = state.tickers;\r\n\r\n      for (var i = 0; i < tickers.length; i++) { \r\n          if (tickers[i].selected==true){\r\n              ticker = tickers[i];\r\n          }\r\n      }\r\n  \r\n      dispatch({ type: 'SET_TICKER', payload: tickers[i] });\r\n\r\n      axios.post('/api/current', ticker).then((response) => {\r\n        setDateTime(response.headers.date);\r\n        setTimestamp(response.data.chart.result[0].timestamp);\r\n        setClose(response.data.chart.result[0].indicators.quote[0].close);\r\n        setHigh(response.data.chart.result[0].indicators.quote[0].high);\r\n        setLow(response.data.chart.result[0].indicators.quote[0].low);\r\n        setOpen(response.data.chart.result[0].indicators.quote[0].open);\r\n        setVolume(response.data.chart.result[0].indicators.quote[0].volume);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      }) \r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/tickers')\r\n            .then(res => {\r\n              dispatch({ type: 'SET_DATA', payload: res.data });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              dispatch({ type: 'SET_ERROR' });\r\n            });\r\n    }, []);\r\n\r\n    const Quote = ({name, list}) => {\r\n      return (\r\n        <div className=\"QuoteContainer\">\r\n          <p>{name}</p>\r\n          <ul className=\"QuoteItems\">\r\n            {list.map((item, idx) => (\r\n              <li key={idx}>{ name === 'Timestamp' \r\n                  ? (new Date(item*1000)).toLocaleDateString() \r\n                  : (item===null ? <span>&nbsp;</span> : (name === 'Volume' ? (item/1000).toFixed(2) + 'K' : item.toFixed(2)))}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <Card className=\"InnerCard\" fontColor=\"black\">\r\n        <p>Stock!!</p>\r\n        <form onSubmit={handleSubmit} className=\"StockWrapper\">\r\n        <ul className=\"StockList\">\r\n            { state.tickers && state.tickers.map(ticker =>\r\n              <li key={ticker.id}>              \r\n                <input id={ticker.id} name={ticker.name}\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectItem}\r\n                  checked={ticker.selected} \r\n                />\r\n                <label htmlFor={`item-${ticker.id}`}>{ticker.description}</label>\r\n              </li>) }\r\n        </ul>\r\n        <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n        <p>{stockCompany} {dateTime}</p>\r\n        <div className=\"StockItem\">\r\n          <div className=\"BoersDetails\">\r\n              <Quote name=\"Timestamp\" list={timestamp}/>\r\n              <Quote name=\"Close\" list={close}/>\r\n              <Quote name=\"Low\" list={low}/>\r\n              <Quote name=\"High\" list={high}/>\r\n              <Quote name=\"Open\" list={open}/>\r\n              <Quote name=\"Volume\" list={volume}/>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default Stock;\r\n","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",["114","115"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport UserService from './UserService';\r\n\r\nconst Private = ({component: Component, ...rest}) => {\r\n  console.log('UserService.isLoggedIn? ' + UserService.isLoggedIn);\r\n  return (\r\n    <Route {...rest} render={props => (            \r\n          UserService.isLoggedIn == true\r\n        ? <Component {...props} />            \r\n        : <Redirect  to={{pathname: '/signIn', state: {from: props.location}}} />        \r\n    )} />   \r\n  );\r\n}\r\n\r\nexport default Private;","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx",["116","117","118"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Metrics = () => {\r\n   const [myData, setMyData] = useState([]);\r\n   const [totalCount, setTotalCount] = useState(0);\r\n\r\n    async function findDate(data) {\r\n        const mediaTypes = data.map(dataItem => dataItem.url) \r\n        .filter((mediaType, index, array) => array.indexOf(mediaType) === index); \r\n        \r\n        const aggregatedData = mediaTypes.map(dataItem => ({\r\n            type: dataItem,\r\n            dateCreated: data.filter(item => item.url == dataItem)[0].dateCreated.split('.')[0],\r\n            count: data.filter(item => item.url == dataItem).length\r\n        }));\r\n        \r\n        return aggregatedData;\r\n    }\r\n\r\n    useEffect(() => {\r\n       axios.get('/api/allHits').then(response => {\r\n          const fetchData = (data) => {\r\n            findDate(data).then(resp => {\r\n              setMyData([ ...myData, ...resp ]);\r\n              const totalCount = resp.reduce((total, item) => total = total + item.count, 0);\r\n              setTotalCount(totalCount);\r\n            }).catch(err => {\r\n                console.error(err);\r\n            })\r\n          }\r\n\r\n          fetchData(response.data);\r\n\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n            <h4 style={{ margin: '20px', fontStyle: 'bold', textAlign: 'left'}}>Safari Zote!</h4>\r\n            <p style={{ margin: '20px', textAlign: 'left'}}>People also ask about this</p>\r\n            <ul className=\"vList\">\r\n               <li>How much does a safari cost in Kenya?</li>\r\n               <li>What is the best safari in Kenya?</li>\r\n               <li>What is the best time to go on safari in Kenya?</li>\r\n               <li>Is Kenya safe for Safari?</li>\r\n            </ul>\r\n            <table className=\"Table\">  \r\n              <tr>\r\n                <th>ID</th>\r\n                <th>URL</th>\r\n                <th>Last Visited</th>\r\n                <th>HITS</th>\r\n              </tr>        \r\n               {myData.map((item,idx) => \r\n                 <tr key={idx}>\r\n                   <td>{idx}</td>\r\n                   <td>{item.type}</td>\r\n                   <td>{item.dateCreated}</td>\r\n                   <td>{item.count}</td>\r\n                 </tr>\r\n               )}\r\n            </table>\r\n            <p style={{ margin: '20px', textAlign:'left'}}>Hits: { totalCount }</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Metrics","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserService.jsx",["119"],{"ruleId":"120","severity":1,"message":"121","line":52,"column":9,"nodeType":"122","messageId":"123","endLine":52,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":90,"column":8,"nodeType":"126","endLine":90,"endColumn":23,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":96,"column":17,"nodeType":"130","endLine":96,"endColumn":54},{"ruleId":"131","severity":1,"message":"132","line":106,"column":17,"nodeType":"130","endLine":106,"endColumn":79},{"ruleId":"128","severity":1,"message":"129","line":106,"column":17,"nodeType":"130","endLine":106,"endColumn":79},{"ruleId":"133","severity":1,"message":"134","line":107,"column":40,"nodeType":"135","messageId":"136","endLine":107,"endColumn":42},{"ruleId":"120","severity":1,"message":"137","line":21,"column":22,"nodeType":"122","messageId":"123","endLine":21,"endColumn":33},{"ruleId":"120","severity":1,"message":"138","line":22,"column":12,"nodeType":"122","messageId":"123","endLine":22,"endColumn":19},{"ruleId":"120","severity":1,"message":"139","line":22,"column":21,"nodeType":"122","messageId":"123","endLine":22,"endColumn":31},{"ruleId":"120","severity":1,"message":"140","line":23,"column":12,"nodeType":"122","messageId":"123","endLine":23,"endColumn":20},{"ruleId":"120","severity":1,"message":"141","line":23,"column":22,"nodeType":"122","messageId":"123","endLine":23,"endColumn":33},{"ruleId":"120","severity":1,"message":"142","line":25,"column":11,"nodeType":"122","messageId":"123","endLine":25,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":93,"column":50,"nodeType":"145","messageId":"136","endLine":93,"endColumn":53},{"ruleId":"124","severity":1,"message":"146","line":103,"column":8,"nodeType":"126","endLine":103,"endColumn":10,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"134","line":140,"column":35,"nodeType":"135","messageId":"136","endLine":140,"endColumn":37},{"ruleId":"120","severity":1,"message":"148","line":165,"column":14,"nodeType":"122","messageId":"123","endLine":165,"endColumn":23},{"ruleId":"120","severity":1,"message":"149","line":169,"column":14,"nodeType":"122","messageId":"123","endLine":169,"endColumn":24},{"ruleId":"120","severity":1,"message":"150","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":26},{"ruleId":"120","severity":1,"message":"151","line":5,"column":22,"nodeType":"122","messageId":"123","endLine":5,"endColumn":31},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"120","severity":1,"message":"156","line":26,"column":12,"nodeType":"122","messageId":"123","endLine":26,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":109,"column":29,"nodeType":"159","messageId":"160","endLine":109,"endColumn":53},{"ruleId":"120","severity":1,"message":"161","line":7,"column":12,"nodeType":"122","messageId":"123","endLine":7,"endColumn":20},{"ruleId":"133","severity":1,"message":"162","line":47,"column":32,"nodeType":"135","messageId":"136","endLine":47,"endColumn":34},{"ruleId":"120","severity":1,"message":"163","line":34,"column":12,"nodeType":"122","messageId":"123","endLine":34,"endColumn":18},{"ruleId":"124","severity":1,"message":"164","line":88,"column":8,"nodeType":"126","endLine":88,"endColumn":19,"suggestions":"165"},{"ruleId":"124","severity":1,"message":"166","line":106,"column":8,"nodeType":"126","endLine":106,"endColumn":20,"suggestions":"167"},{"ruleId":"120","severity":1,"message":"168","line":48,"column":15,"nodeType":"122","messageId":"123","endLine":48,"endColumn":19},{"ruleId":"120","severity":1,"message":"169","line":48,"column":21,"nodeType":"122","messageId":"123","endLine":48,"endColumn":26},{"ruleId":"133","severity":1,"message":"162","line":68,"column":34,"nodeType":"135","messageId":"136","endLine":68,"endColumn":36},{"ruleId":"120","severity":1,"message":"170","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"162","line":10,"column":34,"nodeType":"135","messageId":"136","endLine":10,"endColumn":36},{"ruleId":"133","severity":1,"message":"162","line":15,"column":55,"nodeType":"135","messageId":"136","endLine":15,"endColumn":57},{"ruleId":"133","severity":1,"message":"162","line":16,"column":49,"nodeType":"135","messageId":"136","endLine":16,"endColumn":51},{"ruleId":"124","severity":1,"message":"171","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":10,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":20,"column":1,"nodeType":"175","endLine":20,"endColumn":50},"no-unused-vars","'logout' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.","ArrayExpression",["176"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setPageSize' is assigned a value but never used.","'userPos' is assigned a value but never used.","'setUserPos' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'videoUrl' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Url'.","ObjectExpression","React Hook React.useEffect has a missing dependency: 'safaris'. Either include it or remove the dependency array.",["177"],"'playVideo' is defined but never used.","'pauseVideo' is defined but never used.","'StyleRoot' is defined but never used.","'fontColor' is assigned a value but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"'replyMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'loggedIn' is assigned a value but never used.","Expected '===' and instead saw '=='.","'cities' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'state.city' and 'state.iso2'. Either include them or remove the dependency array.",["180"],"React Hook React.useEffect has a missing dependency: 'state.name'. Either include it or remove the dependency array.",["181"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'myData'. Either include it or remove the dependency array. You can also do a functional update 'setMyData(m => ...)' if you only need 'myData' in the 'setMyData' call.",["182"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [images, selectedImage]",{"range":"193","text":"194"},"Update the dependencies array to be: [safaris]",{"range":"195","text":"196"},"Update the dependencies array to be: [countries, state.city, state.iso2]",{"range":"197","text":"198"},"Update the dependencies array to be: [state.iso2, state.name]",{"range":"199","text":"200"},"Update the dependencies array to be: [myData]",{"range":"201","text":"202"},[2439,2454],"[images, selectedImage]",[4201,4203],"[safaris]",[2621,2632],"[countries, state.city, state.iso2]",[3089,3101],"[state.iso2, state.name]",[1312,1314],"[myData]"]