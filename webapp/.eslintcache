[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"16"},{"size":595,"mtime":1610369505835,"results":"17","hashOfConfig":"18"},{"size":4663,"mtime":1612653606381,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609698107957,"results":"20","hashOfConfig":"18"},{"size":604,"mtime":1610908259981,"results":"21","hashOfConfig":"18"},{"size":4372,"mtime":1611926011984,"results":"22","hashOfConfig":"18"},{"size":1085,"mtime":1611274769307,"results":"23","hashOfConfig":"18"},{"size":2008,"mtime":1611689170754,"results":"24","hashOfConfig":"18"},{"size":431,"mtime":1612003883110,"results":"25","hashOfConfig":"18"},{"size":951,"mtime":1610910085021,"results":"26","hashOfConfig":"18"},{"size":874,"mtime":1611274758199,"results":"27","hashOfConfig":"18"},{"size":3494,"mtime":1611968763188,"results":"28","hashOfConfig":"18"},{"size":2552,"mtime":1611932027600,"results":"29","hashOfConfig":"18"},{"size":2371,"mtime":1611692147285,"results":"30","hashOfConfig":"18"},{"size":8336,"mtime":1611971378458,"results":"31","hashOfConfig":"18"},{"size":4674,"mtime":1612518358383,"results":"32","hashOfConfig":"18"},{"size":594,"mtime":1611817070128,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1j2qoq7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],["71","72"],"D:\\Temps\\safarizote\\webapp\\src\\App.js",[],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["73","74"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table';\r\nimport Card from './Card';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(2);\r\n\r\n    const handleChecked = (e) => {\r\n      setChecked(!checked);\r\n      console.log(e);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          id: safari.id,\r\n          title: safari.title,\r\n          description: safari.description,\r\n          price: safari.price\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <Card title=\"Safaris\" text=\"Safari Zote\">\r\n        <div className =\"sTable\">\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n          {currentItems && currentItems.length > 0 \r\n          ? <Table data={currentItems}/> \r\n          : <p>No Data Found!!</p>}\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],["75","76"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["77"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            console.log(response);\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card title=\"ContactUs\" text=\"Contact Us\">\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n            <div class=\"col-25\">      \r\n                <label htmlFor=\"name\">Name</label>\r\n            </div> \r\n            <div class=\"col-25\">  \r\n                <input\r\n                    type=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div> \r\n            </div>\r\n            <div className=\"form-group\">\r\n            <div class=\"col-25\">      \r\n                <label htmlFor=\"email\">Email</label>\r\n            </div> \r\n            <div class=\"col-25\">  \r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div> \r\n            </div>\r\n            <div className=\"form-group\">\r\n            <div class=\"col-25\">      \r\n                <label htmlFor=\"phone\">Phone</label>\r\n            </div> \r\n            <div class=\"col-25\"> \r\n                <input\r\n                    type=\"phone\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    onChange={handleChange}\r\n                />\r\n            </div> \r\n            </div>\r\n            <div className=\"form-group\">\r\n            <div class=\"col-25\">      \r\n                <label htmlFor=\"message\">Message</label>\r\n            </div> \r\n            <div class=\"col-25\">  \r\n                <textarea id=\"message\" name=\"message\"\r\n                    placeholder=\"Write something..\" \r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                />\r\n            </div> \r\n            </div>\r\n            <div className=\"form-group\">\r\n               <button type=\"submit\">Send</button>\r\n            </div>  \r\n        </form>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["78","79"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      cityName: 'Kabul',\r\n      countryCode: \"AF\",\r\n      countryName: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, cityName: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        axios.get('/api/countries')\r\n            .then(response => {\r\n                let filteredCountries = [];\r\n                response.data.forEach(function(d) {\r\n                  filteredCountries.push({\r\n                     id: d.id,   \r\n                     title: d.name,\r\n                     value: d.code\r\n                   });\r\n                 }); \r\n                setCountries(filteredCountries);\r\n            }).catch(err => console.log(err))\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      let country = {\r\n            name: state.countryName,\r\n            code: state.countryCode,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/cities', country)\r\n          .then(response => {\r\n              let filteredCity = [];\r\n              response.data.forEach(function(city) {\r\n                filteredCity.push({  \r\n                    id: city.id,  \r\n                    value: city.name,\r\n                    title: city.name\r\n                  });\r\n                }); \r\n              dispatch({ type: 'SET_CITIES', payload: filteredCity });\r\n          }).catch(err => console.log(err))\r\n    }, [state.countryCode]);\r\n\r\n    React.useEffect(() => {\r\n        const country = {\r\n            name: state.countryName,\r\n            code: state.countryCode,\r\n            cities: null\r\n        };\r\n          \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n  \r\n        const fetchData = async () => {\r\n          axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n  \r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        };\r\n  \r\n        fetchData();\r\n  \r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.value === event.target.value);\r\n            });\r\n            let newCountry = { ...state, \r\n                countryCode: filteredCountry.value, \r\n                countryName: filteredCountry.title\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.cityName,\r\n            code: state.countryCode,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card title=\"Weather\" text=\"Weather Forecast\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <div class=\"col-25\">   \r\n              <label htmlFor=\"country\">Country</label>\r\n            </div>\r\n            <div class=\"col-25\"> \r\n            <select id=\"countryCode\" name=\"countryCode\" className=\"dropdown\" onChange={handleChange}>    \r\n                <option value=\"none\">Select Country</option>   \r\n                {countries.map((country) => (\r\n                    <option value={country.title}>{country.value}</option>\r\n                ))}    \r\n            </select> \r\n            </div> \r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div class=\"col-25\">   \r\n                <label htmlFor=\"city\">City</label>\r\n            </div>\r\n            <div class=\"col-25\"> \r\n                <select id=\"cityName\" name=\"cityName\" className=\"dropdown\" onChange={handleChange}>    \r\n                  <option value=\"none\">Select City</option>    \r\n                  {state.cities && state.cities.map((city) => (\r\n                      <option value={city.cityName}>{city.cityName}</option>\r\n                  ))}\r\n                </select>  \r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\">Send</button> \r\n          </div> \r\n        </form>\r\n\r\n        <div className=\"day-container\">\r\n            {weather != null && weather.main\r\n              ? <WeatherCard \r\n                title='Current Local Weather'\r\n                width='500px'\r\n                date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n                weather={weather}\r\n                />     \r\n              : <div>No Weather</div>   \r\n          }\r\n        </div>\r\n\r\n        <div className=\"5days-container\">\r\n          {forecast != null \r\n            ? <ForecastList cards={list} />\r\n            : <div>No Forecast</div>   \r\n          }\r\n        </div>\r\n       </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n          <span>loc: {props.weather.loc} date: {props.weather.date}</span>\r\n          <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>\r\n          <div className=\"Cells\">\r\n            <div className=\"Cell\">\r\n              <small>Current</small>\r\n              <div>{props.weather.main.temp}°</div>\r\n            </div>\r\n            <div className=\"Cell\">\r\n              <small>Sky</small>\r\n              <div>{props.weather.weather[0].main}</div>\r\n            </div>\r\n            <div className=\"Cell\">\r\n              <div>{props.weather.weather[0].description}</div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>\r\n        <div className=\"Cells\">\r\n          <div className=\"Cell\">\r\n            <small>High</small>\r\n            <div>{props.temp.day}°</div>\r\n          </div>\r\n          <div className=\"Cell\">\r\n            <small>Now</small>\r\n            <div>{props.temp.min}°</div>\r\n          </div>\r\n          <div className=\"Cell\">\r\n            <small>Main</small>\r\n            <div>{props.weather[0].main}</div>\r\n          </div>\r\n          <div className=\"Cell\">\r\n            <small>&nbsp;</small>\r\n            <div>{props.weather[0].description}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["80","81","82"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":22,"nodeType":"89","messageId":"90","endLine":10,"endColumn":33},{"ruleId":"87","severity":1,"message":"91","line":12,"column":11,"nodeType":"89","messageId":"90","endLine":12,"endColumn":24},{"ruleId":"83","replacedBy":"92"},{"ruleId":"85","replacedBy":"93"},{"ruleId":"87","severity":1,"message":"94","line":26,"column":12,"nodeType":"89","messageId":"90","endLine":26,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":72,"column":8,"nodeType":"97","endLine":72,"endColumn":27,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":102,"column":8,"nodeType":"97","endLine":102,"endColumn":10,"suggestions":"100"},{"ruleId":"87","severity":1,"message":"101","line":49,"column":15,"nodeType":"89","messageId":"90","endLine":49,"endColumn":19},{"ruleId":"87","severity":1,"message":"102","line":49,"column":21,"nodeType":"89","messageId":"90","endLine":49,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":69,"column":34,"nodeType":"105","messageId":"106","endLine":69,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'handleChecked' is assigned a value but never used.",["107"],["108"],"'replyMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'state.countryName'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook React.useEffect has missing dependencies: 'state.countryCode' and 'state.countryName'. Either include them or remove the dependency array.",["110"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [state.countryCode, state.countryName]",{"range":"114","text":"115"},{"range":"116","text":"115"},[2253,2272],"[state.countryCode, state.countryName]",[3056,3058]]