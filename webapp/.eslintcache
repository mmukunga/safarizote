[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"16","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx":"17"},{"size":595,"mtime":1610369505835,"results":"18","hashOfConfig":"19"},{"size":4549,"mtime":1613289577493,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1609698107957,"results":"21","hashOfConfig":"19"},{"size":1543,"mtime":1613254635244,"results":"22","hashOfConfig":"19"},{"size":3578,"mtime":1613258212623,"results":"23","hashOfConfig":"19"},{"size":2821,"mtime":1613292322354,"results":"24","hashOfConfig":"19"},{"size":2012,"mtime":1612818756475,"results":"25","hashOfConfig":"19"},{"size":642,"mtime":1613179862497,"results":"26","hashOfConfig":"19"},{"size":1047,"mtime":1613133003689,"results":"27","hashOfConfig":"19"},{"size":923,"mtime":1612819083608,"results":"28","hashOfConfig":"19"},{"size":3906,"mtime":1613256142123,"results":"29","hashOfConfig":"19"},{"size":1878,"mtime":1613225488596,"results":"30","hashOfConfig":"19"},{"size":2371,"mtime":1611692147285,"results":"31","hashOfConfig":"19"},{"size":7199,"mtime":1613253496240,"results":"32","hashOfConfig":"19"},{"size":4772,"mtime":1612820262635,"results":"33","hashOfConfig":"19"},{"size":552,"mtime":1612994378250,"results":"34","hashOfConfig":"19"},{"size":3472,"mtime":1613937297433,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1j2qoq7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],["77","78"],"D:\\Temps\\safarizote\\webapp\\src\\App.js",[],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Home.jsx",["79"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Home = () => {\r\n   const [data, setData] = useState([]);\r\n   const [counts, setCounts] = useState([]);\r\n   const [clientInfo, setClientInfo] = useState({});\r\n\r\n   useEffect(() => {\r\n      axios.get('https://extreme-ip-lookup.com/json/')\r\n        .then(response => {\r\n            console.log(response);\r\n            axios.post('/api/saveVisit', {\r\n               url: response.data.ipName,\r\n               browser: 'Microsoft Edge',\r\n               dateCreated: new Date().toUTCString\r\n            }).then(response => {\r\n               console.log(response)\r\n            });\r\n            setClientInfo(response.data);\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      axios.get('/api/allHits').then(response => {\r\n        const mediaTypes = response.data.map(dataItem => dataItem.url) \r\n        .filter((mediaType, index, array) => array.indexOf(mediaType) === index); // filter out duplicates\r\n\r\n        console.log(mediaTypes);\r\n        console.log('ClientInfo:= ' + clientInfo);\r\n\r\n        const counts = mediaTypes.map(dataItem => ({\r\n            type: dataItem,\r\n            count: response.data.filter(item => item.url == dataItem).length\r\n        }));\r\n\r\n        setData(response.data);\r\n        setCounts(counts);\r\n\r\n      }).catch(err => {\r\n          console.log(err);\r\n      });\r\n    }, [clientInfo]);\r\n\r\n    return (\r\n        <Card cardWidth=\"500px\" fontColor=\"black\" backgroundColor=\"#F0FFFF\">\r\n            <h4 style={{ margin: '20px', fontSize: 16, fontStyle: 'bold', textAlign: 'left'}}>Safari Zote!</h4>\r\n            <p style={{ margin: '20px', fontSize: 14, textAlign: 'left'}}>People also ask about this</p>\r\n            <ul className=\"vList\">\r\n               <li>How much does a safari cost in Kenya?</li>\r\n               <li>What is the best safari in Kenya?</li>\r\n               <li>What is the best time to go on safari in Kenya?</li>\r\n               <li>Is Kenya safe for Safari?</li>\r\n            </ul>\r\n            <table style={{ width: '100%', boxSizing: 'border-box', fontSize: 14, border: '2px solid #f8ecd5', textAlign: 'left', borderCollapse: 'collapse'}}>  \r\n              <tr>\r\n                <th></th>\r\n                <th>Url</th>\r\n                <th>Hits</th>\r\n              </tr>        \r\n               {counts.map((item,idx) => \r\n                 <tr key={idx}>\r\n                   <td>{idx}</td>\r\n                   <td>{item.type}</td>\r\n                   <td>{item.count}</td>\r\n                 </tr>\r\n               )}\r\n            </table>\r\n            <p style={{ margin: '20px', fontSize: 14, textAlign:'left'}}>Number of Hits: { data.length }</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["80","81"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table';\r\nimport Card from './Card';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(2);\r\n\r\n    const handleChecked = (e) => {\r\n      setChecked(!checked);\r\n      console.log(e);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          id: safari.id,\r\n          title: safari.title,\r\n          description: safari.description,\r\n          price: safari.price\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <Card cardWidth=\"500px\" fontColor=\"black\" backgroundColor=\"#F0FFFF\">\r\n          <p>Safaris!!</p>\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n          {currentItems && currentItems.length > 0 \r\n          ? <Table data={currentItems}/> \r\n          : <p>No Data Found!!</p>}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",["82"],"import React from 'react';\r\n \r\nconst Card = (props) => {\r\n\r\n  const { cardWidth, fontColor, backgroundColor, children } = props;\r\n  const style = {\r\n    width: cardWidth,\r\n    backgroundColor: backgroundColor,\r\n    color: fontColor,\r\n    borderRadius: 10,\r\n    margin: '10px auto',\r\n    padding: '1px',\r\n    border: cardWidth=='650px'? '4px solid #2A9DF4':'4px solid #FFF1E0',\r\n    boxShadow: '0 0 10px 5p' \r\n  };\r\n\r\n  const labelStyles = { color: fontColor };\r\n\r\n    return (\r\n      <div style={style}>   \r\n           <div style={labelStyles}>\r\n               { children }\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n \r\nexport default Card;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["83","84"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card cardWidth=\"500px\" fontColor=\"black\" backgroundColor=\"#F0FFFF\">\r\n            <p>Contact Us!!</p>\r\n            <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div> \r\n                <div className=\"col-75\"> \r\n                    <input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"message\">Message</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <textarea id=\"message\" name=\"message\"\r\n                        className=\"expand\" \r\n                        rows=\"10\"\r\n                        placeholder=\"Write something..\" \r\n                        className=\"form-control\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                  <input type=\"submit\" value=\"Send Message\" className=\"lg-button btn-primary\"/>\r\n                </div>  \r\n            </form>\r\n            </div>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["85","86"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      cityName: 'Kabul',\r\n      countryCode: \"AF\",\r\n      countryName: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, cityName: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        axios.get('/api/countries')\r\n            .then(response => {\r\n                let filteredCountries = [];\r\n                response.data.forEach(function(d) {\r\n                  filteredCountries.push({\r\n                     id: d.id,   \r\n                     title: d.name,\r\n                     value: d.code\r\n                   });\r\n                 }); \r\n                setCountries(filteredCountries);\r\n            }).catch(err => console.log(err))\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      let country = {\r\n            name: state.countryName,\r\n            code: state.countryCode,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/cities', country)\r\n          .then(response => {\r\n              let filteredCity = [];\r\n              response.data.forEach(function(city) {\r\n                filteredCity.push({  \r\n                    id: city.id,  \r\n                    value: city.name,\r\n                    title: city.name\r\n                  });\r\n                }); \r\n              dispatch({ type: 'SET_CITIES', payload: filteredCity });\r\n          }).catch(err => console.log(err))\r\n    }, [state.countryCode]);\r\n\r\n    React.useEffect(() => {\r\n        const country = {\r\n            name: state.countryName,\r\n            code: state.countryCode,\r\n            cities: null\r\n        };\r\n          \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n  \r\n        const fetchData = async () => {\r\n          axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n          }).catch(err => {\r\n              console.log(err);\r\n          });\r\n    \r\n          axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n          }).catch(err => {\r\n            console.log(err);\r\n          });\r\n        };\r\n  \r\n        fetchData();\r\n  \r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.value === event.target.value);\r\n            });\r\n            let newCountry = { ...state, \r\n                countryCode: filteredCountry.value, \r\n                countryName: filteredCountry.title\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.cityName,\r\n            code: state.countryCode,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card cardWidth=\"500px\" fontColor=\"black\" backgroundColor=\"#F0FFFF\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form class=\"form-inline\"  onSubmit={handleSubmit}>\r\n          <select id=\"countryCode\" name=\"countryCode\" onChange={handleChange}>    \r\n                <option value=\"none\">Select Country</option>   \r\n                {countries.map((country) => (\r\n                    <option value={country.title}>{country.value}</option>\r\n                ))}    \r\n            </select>\r\n          <select id=\"cityName\" name=\"cityName\" onChange={handleChange}>    \r\n                  <option value=\"none\">Select City</option>    \r\n                  {state.cities && state.cities.map((city) => (\r\n                      <option value={city.cityName}>{city.cityName}</option>\r\n                  ))}\r\n                </select>  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        {weather != null && weather.main\r\n          ? <WeatherCard \r\n            title='Current Local Weather'\r\n            date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n            weather={weather}\r\n            />     \r\n          : <div>No Weather</div>   \r\n        }\r\n\r\n        <p>Forecast</p>\r\n        {forecast != null \r\n          ? <ForecastList cards={list} />\r\n          : <div>No Forecast</div>   \r\n        }\r\n\r\n        </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    const unix_tm = props.weather.dt;\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n         <div  className=\"Current\">\r\n          Cod: {props.weather.cod} Date: {new Date(unix_tm*1000).toLocaleDateString()}\r\n            <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} \r\n                  alt=\"wthr img\" \r\n                  className=\"wthrImg\"/>\r\n          </div>      \r\n          <div className=\"Current\">\r\n              <div className=\"CellDiv\"><small>Temp</small> {props.weather.main.temp}°</div>\r\n              <div className=\"CellDiv\">{props.weather.weather[0].description}</div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>          \r\n        <small>High</small>\r\n        <div>{props.temp.day}°</div>\r\n        <small>Now</small>\r\n        <div>{props.temp.min}°</div>\r\n        <div>{props.weather[0].description}</div>         \r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["87","88","89"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  tickers: [],\r\n  ticker: ''\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case 'SET_DATA':\r\n        return {\r\n            ...state,\r\n            error: '',\r\n            tickers: [...action.payload],\r\n        }\r\n        case 'SET_TICKER':\r\n          return {\r\n              ...state,\r\n              error: '',\r\n              ticker:action.payload,\r\n          }  \r\n      case 'SET_ERROR':\r\n        return {\r\n            ...state,\r\n            error: \"There are some errors\",\r\n            tickers: [],\r\n        }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nconst Stock = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    //const [tickers, setTickers] = useState([]);\r\n    const [timestamp, setTimestamp] = useState([]);\r\n    const [close, setClose] = useState([]);\r\n    const [high, setHigh] = useState([]);\r\n    const [low, setLow] = useState([]);\r\n    const [open, setOpen] = useState([]);\r\n    const [volume, setVolume] = useState([]);\r\n    const [dateTime, setDateTime] = useState('');\r\n    const [stockCompany, setStockCompany] = useState('');\r\n    //const [ticker, setTicker] = useState('');\r\n\r\n    const handleSelectItem = (event) => {\r\n      const { name, value } = event.target;\r\n\r\n      let tickers = state.tickers;\r\n      for (var i = 0; i < tickers.length; i++) { \r\n        if (event.target.name===tickers[i].name) {\r\n            tickers[i].selected=true;\r\n            setStockCompany(tickers[i].description);\r\n        } else {\r\n            tickers[i].selected=false;\r\n        }\r\n      }\r\n      dispatch({ type: 'SET_DATA', payload: tickers });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      let ticker = '';\r\n      const tickers = state.tickers;\r\n\r\n      for (var i = 0; i < tickers.length; i++) { \r\n          if (tickers[i].selected==true){\r\n              ticker = tickers[i];\r\n          }\r\n      }\r\n  \r\n      dispatch({ type: 'SET_TICKER', payload: tickers[i] });\r\n\r\n      axios.post('/api/current', ticker).then((response) => {\r\n        setDateTime(response.headers.date);\r\n        setTimestamp(response.data.chart.result[0].timestamp);\r\n        setClose(response.data.chart.result[0].indicators.quote[0].close);\r\n        setHigh(response.data.chart.result[0].indicators.quote[0].high);\r\n        setLow(response.data.chart.result[0].indicators.quote[0].low);\r\n        setOpen(response.data.chart.result[0].indicators.quote[0].open);\r\n        setVolume(response.data.chart.result[0].indicators.quote[0].volume);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      }) \r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/tickers')\r\n            .then(res => {\r\n              dispatch({ type: 'SET_DATA', payload: res.data });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              dispatch({ type: 'SET_ERROR' });\r\n            });\r\n    }, []);\r\n\r\n    const Quote = ({name, list}) => {\r\n      return (\r\n        <div className=\"QuoteContainer\">\r\n          <p>{name}</p>\r\n          <ul className=\"QuoteItems\">\r\n            {list.map((item, idx) => (\r\n              <li key={idx}>{ name === 'Timestamp' ? (new Date(item*1000)).toLocaleDateString() : item.toFixed(2)}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    console.log('stockCompany:= ' + stockCompany);\r\n    \r\n    return (\r\n      <Card cardWidth=\"500px\" fontColor=\"black\" backgroundColor=\"#F0FFFF\">\r\n        <p>Stock!!</p>\r\n        <form onSubmit={handleSubmit} className=\"StockWrapper\">\r\n        <ul className=\"StockList\">\r\n            { state.tickers && state.tickers.map(ticker =>\r\n              <li key={ticker.id}>              \r\n                <input id={ticker.id} name={ticker.name}\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectItem}\r\n                  checked={ticker.selected} \r\n                />\r\n                <label htmlFor={`item-${ticker.id}`}>{ticker.description}</label>\r\n              </li>) }\r\n              <li><input type=\"submit\" value=\"Submit\"/></li>\r\n        </ul>\r\n        </form>\r\n        <p>{stockCompany} {dateTime}</p>\r\n        <div className=\"StockTable\">\r\n          <div className=\"StockRow\">\r\n              <Quote name=\"Timestamp\" list={timestamp}/>\r\n              <Quote name=\"Close\" list={close}/>\r\n              <Quote name=\"Low\" list={low}/>\r\n              <Quote name=\"High\" list={high}/>\r\n              <Quote name=\"Open\" list={open}/>\r\n              <Quote name=\"Volume\" list={volume}/>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default Stock;\r\n","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":37,"column":58,"nodeType":"97","messageId":"98","endLine":37,"endColumn":60},{"ruleId":"99","severity":1,"message":"100","line":10,"column":22,"nodeType":"101","messageId":"102","endLine":10,"endColumn":33},{"ruleId":"99","severity":1,"message":"103","line":12,"column":11,"nodeType":"101","messageId":"102","endLine":12,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":13,"column":22,"nodeType":"97","messageId":"98","endLine":13,"endColumn":24},{"ruleId":"99","severity":1,"message":"104","line":26,"column":12,"nodeType":"101","messageId":"102","endLine":26,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":103,"column":25,"nodeType":"107","endLine":103,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":72,"column":8,"nodeType":"110","endLine":72,"endColumn":27,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":102,"column":8,"nodeType":"110","endLine":102,"endColumn":10,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"114","line":50,"column":15,"nodeType":"101","messageId":"102","endLine":50,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":50,"column":21,"nodeType":"101","messageId":"102","endLine":50,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":70,"column":34,"nodeType":"97","messageId":"98","endLine":70,"endColumn":36},{"ruleId":"99","severity":1,"message":"116","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'handleChecked' is assigned a value but never used.","'replyMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'state.countryName'. Either include it or remove the dependency array.","ArrayExpression",["119"],"React Hook React.useEffect has missing dependencies: 'state.countryCode' and 'state.countryName'. Either include them or remove the dependency array.",["120"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},"Update the dependencies array to be: [state.countryCode, state.countryName]",{"range":"124","text":"125"},{"range":"126","text":"125"},[2253,2272],"[state.countryCode, state.countryName]",[3070,3072]]