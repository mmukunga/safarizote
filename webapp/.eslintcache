[{"D:\\Temps\\safarizote\\webapp\\src\\index.js":"1","D:\\Temps\\safarizote\\webapp\\src\\App.js":"2","D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js":"3","D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx":"4","D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx":"5","D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx":"6","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx":"7","D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx":"8","D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx":"9","D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx":"10","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx":"11","D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx":"12","D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx":"13","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx":"14","D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx":"15","D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx":"16","D:\\Temps\\safarizote\\webapp\\src\\pages\\Tableless.jsx":"17","D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx":"18"},{"size":595,"mtime":1610369505835,"results":"19","hashOfConfig":"20"},{"size":4970,"mtime":1617630126880,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609698107957,"results":"22","hashOfConfig":"20"},{"size":1623,"mtime":1616974006387,"results":"23","hashOfConfig":"20"},{"size":3580,"mtime":1617659815070,"results":"24","hashOfConfig":"20"},{"size":2042,"mtime":1617543338120,"results":"25","hashOfConfig":"20"},{"size":319,"mtime":1617477238799,"results":"26","hashOfConfig":"20"},{"size":1083,"mtime":1617228008999,"results":"27","hashOfConfig":"20"},{"size":889,"mtime":1616751183261,"results":"28","hashOfConfig":"20"},{"size":3962,"mtime":1617444326236,"results":"29","hashOfConfig":"20"},{"size":1981,"mtime":1617659854562,"results":"30","hashOfConfig":"20"},{"size":2371,"mtime":1611692147285,"results":"31","hashOfConfig":"20"},{"size":6834,"mtime":1617263780986,"results":"32","hashOfConfig":"20"},{"size":4770,"mtime":1617659824511,"results":"33","hashOfConfig":"20"},{"size":552,"mtime":1615500361803,"results":"34","hashOfConfig":"20"},{"size":4463,"mtime":1617659782172,"results":"35","hashOfConfig":"20"},{"size":1168,"mtime":1617659841311,"results":"36","hashOfConfig":"20"},{"size":2515,"mtime":1617629942303,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1j2qoq7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Temps\\safarizote\\webapp\\src\\index.js",[],["79","80"],"D:\\Temps\\safarizote\\webapp\\src\\App.js",["81"],"D:\\Temps\\safarizote\\webapp\\src\\reportWebVitals.js",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\AboutUs.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Shopping.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Safaris.jsx",["82","83"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nimport Tableless from './Tableless';\r\n\r\nconst Safaris = () => {\r\n    const [safaris, setSafaris] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    \r\n    const [pageSize, setPageSize] = useState(2);\r\n    const handleChecked = (e) => {\r\n      setChecked(!checked);\r\n      console.log(e);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      setCurrentPage(event.target.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/safaris').then(response => {\r\n          setSafaris(response.data);\r\n        }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, []);\r\n\r\n    var array_nodes = [];\r\n\r\n    safaris.forEach(function(safari) {\r\n        array_nodes.push({\r\n          title: '<span class=\\'SafariTitle\\'>'+ safari.title + '<span>',\r\n          description: safari.description + ' <strong>USD ' + safari.price + '<strong>',\r\n        });\r\n    });\r\n    \r\n    const indexOfLastItem = currentPage * pageSize;\r\n    const indexOfFirstItem = indexOfLastItem - pageSize;\r\n    const currentItems = array_nodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(array_nodes.length / pageSize); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    \r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <Card className=\"InnerCard\" fontColor=\"black\">\r\n          <p>Our Safaris</p>\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n          {currentItems && currentItems.length > 0 \r\n           ? <Tableless data={currentItems}/> \r\n           : <p>No Data Found!!</p>}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default Safaris;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Card.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Table.jsx",[],["84","85"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Lotto.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Email.jsx",["86","87"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst initialState = {\r\n    name: \"Simon Mukunga\",\r\n    email: \"mkunsim@gmail.com\",\r\n    phone: '212 212 212',\r\n    message: 'Email- Just Testing!! Great Stuff!!'\r\n};\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case 'SET_EMAIL':\r\n            const {name, value} = action.payload;\r\n            return {...state, [name]: value};\r\n        case 'RESET_ALL':\r\n            return {...state, ...action.payload};    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Email = (props) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [replyMsg, setReplyMsg] = React.useState('Reply Message');\r\n    const handleChange = (event) => {\r\n        dispatch({type: 'SET_EMAIL', payload: event.target});\r\n    }\r\n\r\n    console.log('props.location.state:= ' + props.location.state);\r\n    \r\n    const clearState = () => {\r\n       dispatch({type: 'RESET_ALL', payload: initialState});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/email', {\r\n            name: state.name,\r\n            email: state.email,\r\n            phone: state.phone,\r\n            message: state.message\r\n        }).then(response => {\r\n            setReplyMsg(response.data);\r\n            clearState();\r\n        });\r\n    }\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\" >\r\n            <p>Contact Us!!</p>\r\n            <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div> \r\n                <div className=\"col-75\"> \r\n                    <input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-25\">      \r\n                    <label htmlFor=\"message\">Message</label>\r\n                </div> \r\n                <div className=\"col-75\">  \r\n                    <textarea id=\"message\" name=\"message\"\r\n                        className=\"expand\" \r\n                        rows=\"10\"\r\n                        placeholder=\"Write something..\" \r\n                        className=\"form-control\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                  <input type=\"submit\" value=\"Send Message\" className=\"lg-button btn-primary\"/>\r\n                </div>  \r\n            </form>\r\n            </div>\r\n        </Card>   \r\n    );\r\n}\r\n\r\nexport default Email;","D:\\Temps\\safarizote\\webapp\\src\\pages\\SignIn.jsx",["88"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\UserForm.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Weather.jsx",["89","90","91"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\n  const initialState = {\r\n      city: 'Kabul',\r\n      code: \"AF\",\r\n      name: \"Afghanistan\",\r\n      cities: null\r\n  };\r\n\r\n  const reducer = function (state, action) {\r\n      switch(action.type) {\r\n          case 'SET_COUNTRY':\r\n              return {...state, ...action.payload};\r\n          case 'SET_CITY':\r\n              return { \r\n                  ...state, city: action.payload\r\n              };  \r\n          case 'SET_CITIES':\r\n              return { \r\n                  ...state, cities: action.payload\r\n              };            \r\n          default:\r\n              return state;\r\n      }\r\n  }\r\n\r\n  const IMG_URL = 'https://openweathermap.org/img/w';\r\n\r\n  const Weather = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [countries, setCountries] = React.useState([]);\r\n    const [cities, setCities] = React.useState([]);\r\n    const [weather, setWeather] = React.useState({});\r\n    const [forecast, setForecast] = React.useState([]);\r\n    const [list, setList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n            setCountries(response.data);\r\n        }).catch(err => console.log(err));\r\n\r\n         let country = {\r\n              name: 'Kabul',\r\n              code: \"AF\",\r\n              cities: null\r\n        };\r\n        \r\n      axios.post('/api/cities', country)\r\n        .then(response => {\r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      var headers = {\r\n        'Content-Type': 'application/json' \r\n      };\r\n\r\n      const country = {\r\n            name: state.city,\r\n            code: state.code,\r\n            cities: null\r\n      };\r\n\r\n      axios.post('/api/weather', country, headers)\r\n        .then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => { console.log(err)});\r\n\r\n      axios.post('/api/forecast', country, headers)\r\n        .then(response => {\r\n          setList(response.data.list);\r\n          setForecast(response.data);\r\n       }).catch(err => {console.log(err)});\r\n\r\n    }, [countries]);\r\n\r\n    React.useEffect(() => { \r\n\r\n      let country = {\r\n        name: state.name,\r\n        code: state.code,\r\n        cities: null\r\n      };\r\n      \r\n      axios.post('/api/cities', country)\r\n        .then(response => {  \r\n            setCities(response.data);\r\n            const cities = response.data;\r\n            dispatch({ type: 'SET_CITIES', payload: cities });\r\n        }).catch(err => console.log(err));\r\n\r\n    }, [state.code]);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"countryCode\") {\r\n            const filteredCountry = countries.find(country => {\r\n               return (country.name === event.target.value);\r\n            });          \r\n            let newCountry = { ...state, \r\n                code: filteredCountry.code, \r\n                name: filteredCountry.name\r\n            };\r\n            dispatch({ type: 'SET_COUNTRY', payload: newCountry});\r\n        } else {\r\n          dispatch({ type: 'SET_CITY', payload: event.target.value });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();   \r\n        var headers = {\r\n          'Content-Type': 'application/json' \r\n        };\r\n\r\n        const country = {\r\n            name: state.name,\r\n            code: state.code,\r\n            cities: null\r\n        };\r\n\r\n        axios.post('/api/weather', country, headers).then(response => {\r\n            setWeather(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        axios.post('/api/forecast', country, headers).then(response => {\r\n            setList(response.data.list);\r\n            setForecast(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card className=\"InnerCard\" fontColor=\"black\">\r\n        {state.cityName} - {state.countryName}, {state.countryCode} \r\n        <form class=\"form-inline\"  onSubmit={handleSubmit}>\r\n          <select id=\"countryCode\" name=\"countryCode\" onChange={handleChange}>    \r\n              <option value=\"none\">Select Country</option>   \r\n              {countries.map((country) => (\r\n                  <option value={country.name}>{country.code}</option>\r\n              ))}    \r\n          </select>\r\n          <select id=\"cityName\" name=\"cityName\" onChange={handleChange}>    \r\n              <option value=\"none\">Select City</option>    \r\n              {state.cities && state.cities.map((city) => (\r\n                  <option value={city.name}>{city.name}</option>\r\n              ))}\r\n            </select>  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        {weather != null && weather.main\r\n          ? <WeatherCard \r\n            title='Current Local Weather'\r\n            date={new Date((weather.dt)*1000).toLocaleDateString(\"en-US\")}\r\n            weather={weather}\r\n            />     \r\n          : <div>No Weather</div>   \r\n        }\r\n\r\n        <h3>Weather Forecast</h3>\r\n        {forecast != null \r\n          ? <ForecastList cards={list} />\r\n          : <div>No Forecast</div>   \r\n        }\r\n\r\n        </Card>   \r\n    );\r\n  }\r\n\r\n  const WeatherCard = (props) => {\r\n    const unix_tm = props.weather.dt;\r\n    return ( \r\n      <div className=\"WeatherCard\"> \r\n         <div  className=\"Current\">\r\n          Cod: {props.weather.cod} Date: {new Date(unix_tm*1000).toLocaleDateString()}\r\n            <img src={`${IMG_URL}/${props.weather.weather[0].icon}.png`} \r\n                  alt=\"wthr img\" \r\n                  className=\"wthrImg\"/>\r\n          </div>      \r\n          <div className=\"Current\">\r\n              <div className=\"CellDiv\"><small>Temp</small> {props.weather.main.temp}°</div>\r\n              <div className=\"CellDiv\">{props.weather.weather[0].description}</div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ForecastList = props => {\r\n    return (\r\n    <div className=\"ForecastList\">\r\n        {props.cards.map(card => (\r\n            card.temp !=null && <ForecastCard {...card} />\r\n        ))}\r\n    </div>\r\n    )\r\n  };\r\n\r\n  const ForecastCard = (props) => {\r\n    return (\r\n      <div className=\"ForecastCard\">\r\n        <span>{props.date}</span>\r\n        <img src={`${IMG_URL}/${props.weather[0].icon}.png`} alt=\"wthr img\" className=\"wthrImg\"/>          \r\n        <div>High</div>\r\n        <div>{props.temp.day}°</div>\r\n        <div>Now</div>\r\n        <div>{props.temp.min}°</div>\r\n        <div>{props.weather[0].description}</div>         \r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default Weather;","D:\\Temps\\safarizote\\webapp\\src\\pages\\Stock.jsx",["92","93","94"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Private.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\BackUp.jsx",["95","96","97","98"],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Tableless.jsx",[],"D:\\Temps\\safarizote\\webapp\\src\\pages\\Metrics.jsx",["99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":82,"column":8,"nodeType":"106","endLine":82,"endColumn":23,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":22,"nodeType":"110","messageId":"111","endLine":11,"endColumn":33},{"ruleId":"108","severity":1,"message":"112","line":12,"column":11,"nodeType":"110","messageId":"111","endLine":12,"endColumn":24},{"ruleId":"100","replacedBy":"113"},{"ruleId":"102","replacedBy":"114"},{"ruleId":"108","severity":1,"message":"115","line":26,"column":12,"nodeType":"110","messageId":"111","endLine":26,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":104,"column":25,"nodeType":"118","endLine":104,"endColumn":49},{"ruleId":"108","severity":1,"message":"119","line":47,"column":15,"nodeType":"110","messageId":"111","endLine":47,"endColumn":24},{"ruleId":"108","severity":1,"message":"120","line":34,"column":12,"nodeType":"110","messageId":"111","endLine":34,"endColumn":18},{"ruleId":"104","severity":1,"message":"121","line":82,"column":8,"nodeType":"106","endLine":82,"endColumn":19,"suggestions":"122"},{"ruleId":"104","severity":1,"message":"123","line":99,"column":8,"nodeType":"106","endLine":99,"endColumn":20,"suggestions":"124"},{"ruleId":"108","severity":1,"message":"125","line":49,"column":15,"nodeType":"110","messageId":"111","endLine":49,"endColumn":19},{"ruleId":"108","severity":1,"message":"126","line":49,"column":21,"nodeType":"110","messageId":"111","endLine":49,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":69,"column":34,"nodeType":"129","messageId":"130","endLine":69,"endColumn":36},{"ruleId":"108","severity":1,"message":"131","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"132","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"133","line":7,"column":11,"nodeType":"110","messageId":"111","endLine":7,"endColumn":15},{"ruleId":"108","severity":1,"message":"134","line":9,"column":20,"nodeType":"110","messageId":"111","endLine":9,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":31,"column":58,"nodeType":"129","messageId":"130","endLine":31,"endColumn":60},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'handleChecked' is assigned a value but never used.",["135"],["136"],"'replyMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'userToken' is assigned a value but never used.","'cities' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'state.city' and 'state.code'. Either include them or remove the dependency array.",["138"],"React Hook React.useEffect has a missing dependency: 'state.name'. Either include it or remove the dependency array.",["139"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'myPC' is assigned a value but never used.","'setGroups' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [images, selectedImage]",{"range":"146","text":"147"},"Update the dependencies array to be: [countries, state.city, state.code]",{"range":"148","text":"149"},"Update the dependencies array to be: [state.code, state.name]",{"range":"150","text":"151"},[2198,2213],"[images, selectedImage]",[2335,2346],"[countries, state.city, state.code]",[2773,2785],"[state.code, state.name]"]